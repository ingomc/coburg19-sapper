.card.svelte-13r15sk{background-color:var(--card-bg);border:2px solid transparent;border-radius:var(--border-radius);color:var(--card-color);display:block;overflow:hidden;padding:var(--spacing);position:relative;transition:border 0.1s ease-in-out;user-select:none;width:100%;line-height:initial}.card.svelte-13r15sk:focus{border-color:var(--color)}@media(hover: hover){.card.svelte-13r15sk:hover{border-color:var(--color)}}.row.svelte-13r15sk{align-items:center;display:flex;padding:0.25rem}.column.svelte-13r15sk{width:50%}.danger-icon.svelte-13r15sk{height:0.7em;vertical-align:middle;width:0.7em}.number.svelte-13r15sk{font-size:2rem;font-weight:500;margin:0;padding:0}.area.svelte-13r15sk{font-size:0.75rem}.city.svelte-13r15sk{font-size:1.4rem;max-width:100%;overflow:hidden;text-overflow:ellipsis;font-weight:600}.cases.svelte-13r15sk{font-size:0.75rem}.arrow-right-mini.svelte-13r15sk{fill:var(--card-color);height:1em;position:absolute;right:calc(-0.5 * var(--spacing));top:50%;transform:translate3d(0, -50%, 0);width:1em}.content.svelte-13r15sk{position:relative;z-index:5}.canvas.svelte-13r15sk{bottom:0;height:200%;left:0;position:absolute;right:0;top:0;width:200%;z-index:0;transform:scale(0.5);transform-origin:0 0}
/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQ2FyZC5zdmVsdGUiLCJzb3VyY2VzIjpbIkNhcmQuc3ZlbHRlIl0sInNvdXJjZXNDb250ZW50IjpbIjxzdHlsZT5cbiAgLmNhcmQge1xuICAgIGJhY2tncm91bmQtY29sb3I6IHZhcigtLWNhcmQtYmcpO1xuICAgIGJvcmRlcjogMnB4IHNvbGlkIHRyYW5zcGFyZW50O1xuICAgIGJvcmRlci1yYWRpdXM6IHZhcigtLWJvcmRlci1yYWRpdXMpO1xuICAgIGNvbG9yOiB2YXIoLS1jYXJkLWNvbG9yKTtcbiAgICBkaXNwbGF5OiBibG9jaztcbiAgICBvdmVyZmxvdzogaGlkZGVuO1xuICAgIHBhZGRpbmc6IHZhcigtLXNwYWNpbmcpO1xuICAgIC8qIHBhZGRpbmctcmlnaHQ6IHZhcigtLXNwYWNpbmcteGwpOyAqL1xuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICB0cmFuc2l0aW9uOiBib3JkZXIgMC4xcyBlYXNlLWluLW91dDtcbiAgICB1c2VyLXNlbGVjdDogbm9uZTtcbiAgICB3aWR0aDogMTAwJTtcbiAgICBsaW5lLWhlaWdodDogaW5pdGlhbDtcbiAgfVxuXG4gIC5jYXJkOmZvY3VzIHtcbiAgICBib3JkZXItY29sb3I6IHZhcigtLWNvbG9yKTtcbiAgfVxuICBAbWVkaWEgKGhvdmVyOiBob3Zlcikge1xuICAgIC5jYXJkOmhvdmVyIHtcbiAgICAgIGJvcmRlci1jb2xvcjogdmFyKC0tY29sb3IpO1xuICAgIH1cbiAgfVxuXG4gIC5yb3cge1xuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBwYWRkaW5nOiAwLjI1cmVtO1xuICB9XG5cbiAgLmNvbHVtbiB7XG4gICAgd2lkdGg6IDUwJTtcbiAgfVxuXG4gIC5kYW5nZXItaWNvbiB7XG4gICAgaGVpZ2h0OiAwLjdlbTtcbiAgICB2ZXJ0aWNhbC1hbGlnbjogbWlkZGxlO1xuICAgIHdpZHRoOiAwLjdlbTtcbiAgfVxuXG4gIC5udW1iZXIge1xuICAgIGZvbnQtc2l6ZTogMnJlbTtcbiAgICBmb250LXdlaWdodDogNTAwO1xuICAgIG1hcmdpbjogMDtcbiAgICBwYWRkaW5nOiAwO1xuICB9XG5cbiAgLmFyZWEge1xuICAgIGZvbnQtc2l6ZTogMC43NXJlbTtcbiAgfVxuXG4gIC5jaXR5IHtcbiAgICBmb250LXNpemU6IDEuNHJlbTtcbiAgICBtYXgtd2lkdGg6IDEwMCU7XG4gICAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgICB0ZXh0LW92ZXJmbG93OiBlbGxpcHNpcztcbiAgICBmb250LXdlaWdodDogNjAwO1xuICB9XG5cbiAgLmNhc2VzIHtcbiAgICBmb250LXNpemU6IDAuNzVyZW07XG4gIH1cblxuICAuYXJyb3ctcmlnaHQtbWluaSB7XG4gICAgZmlsbDogdmFyKC0tY2FyZC1jb2xvcik7XG4gICAgaGVpZ2h0OiAxZW07XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIC8qIHJpZ2h0OiAwOyAqL1xuICAgIHJpZ2h0OiBjYWxjKC0wLjUgKiB2YXIoLS1zcGFjaW5nKSk7XG4gICAgdG9wOiA1MCU7XG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGUzZCgwLCAtNTAlLCAwKTtcbiAgICB3aWR0aDogMWVtO1xuICB9XG5cbiAgLmNvbnRlbnQge1xuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICB6LWluZGV4OiA1O1xuICB9XG5cbiAgLmNhbnZhcyB7XG4gICAgYm90dG9tOiAwO1xuICAgIGhlaWdodDogMjAwJTtcbiAgICBsZWZ0OiAwO1xuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICByaWdodDogMDtcbiAgICB0b3A6IDA7XG4gICAgd2lkdGg6IDIwMCU7XG4gICAgei1pbmRleDogMDtcbiAgICB0cmFuc2Zvcm06IHNjYWxlKDAuNSk7XG4gICAgdHJhbnNmb3JtLW9yaWdpbjogMCAwO1xuICB9XG48L3N0eWxlPlxuXG48c2NyaXB0PlxuICBleHBvcnQgbGV0IGRhdGE7XG4gIGxldCBjYW52YXM7XG4gIGxldCB3YXJuaW5nY2xhc3MgPSAnd2FybmluZyc7XG4gIGxldCBwb2ludHM7XG4gIGxldCBtYXg7XG5cbiAgLy8gU3Vic2NyaWJlIG9uIGNoYW5nZXNcbiAgJDoge1xuICAgIHdhcm5pbmdjbGFzcyA9ICd3YXJuaW5nJztcbiAgICBpZiAoZGF0YS5pbmNpZGVuY2UgPCAzNSkge1xuICAgICAgd2FybmluZ2NsYXNzID0gJ2luZm8nO1xuICAgIH1cblxuICAgIGlmIChkYXRhLmluY2lkZW5jZSA+PSA1MCAmJiBkYXRhLmluY2lkZW5jZSA8IDEwMCkge1xuICAgICAgd2FybmluZ2NsYXNzID0gJ2Rhbmdlcic7XG4gICAgfVxuXG4gICAgaWYgKGRhdGEuaW5jaWRlbmNlID49IDEwMCkge1xuICAgICAgd2FybmluZ2NsYXNzID0gJ3N1cGVyZGFuZ2VyJztcbiAgICB9XG4gICAgaWYgKGRhdGEuYWxsSW5jaWRlbmNlcykge1xuICAgICAgcG9pbnRzID0gQXJyYXkuZnJvbShkYXRhLmFsbEluY2lkZW5jZXMuaW5jaWRlbmNlcy5kYXRhc2V0c1swXS5kYXRhLCAoeCkgPT4geC55KTtcbiAgICAgIG1heCA9IE1hdGguY2VpbChNYXRoLm1heCguLi5wb2ludHMpIC8gMTAwKSAqIDEwMDtcbiAgICB9XG4gICAgZnVuY3Rpb24gZHJhdygpIHtcbiAgICAgIGlmICghY2FudmFzICYmICFjYW52YXMuZ2V0Q29udGV4dCkge1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG4gICAgICBjb25zdCB3aWR0aCA9IGNhbnZhcy53aWR0aDtcbiAgICAgIGNvbnN0IGhlaWdodCA9IGNhbnZhcy5oZWlnaHQ7XG4gICAgICBjb25zdCBjdHggPSBjYW52YXMuZ2V0Q29udGV4dCgnMmQnKTtcbiAgICAgIGN0eC5jbGVhclJlY3QoLTEwLCAwLCB3aWR0aCArIDEwLCBoZWlnaHQpO1xuXG4gICAgICBpZiAoISFkYXRhLmFsbEluY2lkZW5jZXMpIHtcbiAgICAgICAgY3R4LmZpbGxTdHlsZSA9IGRhdGEuaW5jaWRlbmNlID49IDEwMCA/ICdyZ2JhKDI1NSwxMDAsMTAwLDAuMSknIDogJ3JnYmEoMCwwLDAsMC4xKSc7XG5cbiAgICAgICAgLy8gZHJhdyB0aGUgYXJlYVxuICAgICAgICBjdHguYmVnaW5QYXRoKCk7XG4gICAgICAgIC8vIFN0YXJ0cG9pbnRcbiAgICAgICAgY3R4Lm1vdmVUbygtMTAsIGhlaWdodCk7XG4gICAgICAgIC8vIERyYXcgZWFjaCBwb2ludFxuICAgICAgICBwb2ludHMucmV2ZXJzZSgpLmZvckVhY2goKHBvaW50LCBpbmRleCkgPT4ge1xuICAgICAgICAgIGN0eC5saW5lVG8oKHdpZHRoIC8gKHBvaW50cy5sZW5ndGggLSAxKSkgKiBpbmRleCwgaGVpZ2h0IC0gcG9pbnQgLyAobWF4IC8gaGVpZ2h0KSk7XG4gICAgICAgIH0pO1xuICAgICAgICAvLyBMYXN0IHBvaW50XG4gICAgICAgIGN0eC5saW5lVG8oNjEwLCBoZWlnaHQpO1xuICAgICAgICBjdHguc3Ryb2tlU3R5bGUgPSBkYXRhLmluY2lkZW5jZSA+PSAxMDAgPyAncmdiYSgyNTUsMTAwLDEwMCwwLjIpJyA6ICdyZ2JhKDAsMCwwLDAuMiknO1xuICAgICAgICBjdHgubGluZVdpZHRoID0gMTtcbiAgICAgICAgY3R4LnN0cm9rZSgpO1xuICAgICAgICBjdHguZmlsbCgpO1xuICAgICAgfVxuICAgIH1cbiAgICBpZiAodHlwZW9mIHdpbmRvdyAhPSAndW5kZWZpbmVkJyAmJiB0eXBlb2YgY2FudmFzICE9ICd1bmRlZmluZWQnKSB7XG4gICAgICBkcmF3KCk7XG4gICAgfVxuICB9XG48L3NjcmlwdD5cblxuPGRpdiBjbGFzcz1cIntgY2FyZCAke3dhcm5pbmdjbGFzc31gfVwiPlxuICA8Y2FudmFzIGNsYXNzPVwiY2FudmFzXCIgYmluZDp0aGlzPVwie2NhbnZhc31cIj48L2NhbnZhcz5cblxuICA8ZGl2IGNsYXNzPVwiY29udGVudFwiPlxuICAgIDxkaXYgY2xhc3M9XCJyb3dcIj5cbiAgICAgIDxkaXYgY2xhc3M9XCJjb2x1bW5cIj5cbiAgICAgICAgPGgzIGNsYXNzPVwibnVtYmVyXCI+XG4gICAgICAgICAgeyNpZiBkYXRhLmluY2lkZW5jZSA+PSAyMDAgJiYgZGF0YS5pbmNpZGVuY2UgPCAxMDAwfVxuICAgICAgICAgICAgPHN2Z1xuICAgICAgICAgICAgICBjbGFzcz1cImRhbmdlci1pY29uXCJcbiAgICAgICAgICAgICAgeG1sbnM9XCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1wiXG4gICAgICAgICAgICAgIHhtbG5zOnhsaW5rPVwiaHR0cDovL3d3dy53My5vcmcvMTk5OS94bGlua1wiXG4gICAgICAgICAgICAgIGFyaWEtaGlkZGVuPVwidHJ1ZVwiXG4gICAgICAgICAgICAgIGZvY3VzYWJsZT1cImZhbHNlXCJcbiAgICAgICAgICAgICAgcm9sZT1cImltZ1wiXG4gICAgICAgICAgICAgIHByZXNlcnZlQXNwZWN0UmF0aW89XCJ4TWlkWU1pZCBtZWV0XCJcbiAgICAgICAgICAgICAgdmlld0JveD1cIjAgMCAyNCAyNFwiXG4gICAgICAgICAgICAgIHN0eWxlPVwidHJhbnNmb3JtOiByb3RhdGUoMzYwZGVnKTtcIlxuICAgICAgICAgICAgPjxwYXRoXG4gICAgICAgICAgICAgICAgZD1cIk0xNC44IDQuNjEzbDYuNzAxIDExLjE2MWMuOTYzIDEuNjAzLjQ5IDMuNzEyLTEuMDU3IDQuNzFhMy4yMTMgMy4yMTMgMCAwIDEtMS43NDMuNTE2SDUuMjk4QzMuNDc3IDIxIDIgMTkuNDcgMiAxNy41ODFjMC0uNjM5LjE3My0xLjI2NC40OTgtMS44MDdMOS4yIDQuNjEzYy45NjItMS42MDMgMi45OTYtMi4wOTQgNC41NDMtMS4wOTZjLjQyOC4yNzYuNzkuNjUxIDEuMDU3IDEuMDk2em0tMi4yMi44MzlhMS4wNzcgMS4wNzcgMCAwIDAtMS41MTQuMzY1TDQuMzY1IDE2Ljk4YTEuMTcgMS4xNyAwIDAgMC0uMTY2LjYwMmMwIC42My40OTIgMS4xNCAxLjEgMS4xNEgxOC43Yy4yMDYgMCAuNDA3LS4wNi41ODEtLjE3MmExLjE2NCAxLjE2NCAwIDAgMCAuMzUzLTEuNTdMMTIuOTMzIDUuODE3YTEuMTIgMS4xMiAwIDAgMC0uMzUyLS4zNjV6TTEyIDE3YTEgMSAwIDEgMSAwLTJhMSAxIDAgMCAxIDAgMnptMC05YTEgMSAwIDAgMSAxIDF2NGExIDEgMCAwIDEtMiAwVjlhMSAxIDAgMCAxIDEtMXpcIlxuICAgICAgICAgICAgICAgIGZpbGw9XCJjdXJyZW50Q29sb3JcIlxuICAgICAgICAgICAgICA+PC9wYXRoPjwvc3ZnPlxuICAgICAgICAgIHsvaWZ9XG4gICAgICAgICAge051bWJlcihkYXRhLmluY2lkZW5jZSkudG9Mb2NhbGVTdHJpbmcoJ2RlLURFJywge1xuICAgICAgICAgICAgbWluaW11bUZyYWN0aW9uRGlnaXRzOiAxLFxuICAgICAgICAgICAgbWF4aW11bUZyYWN0aW9uRGlnaXRzOiAxLFxuICAgICAgICAgIH0pfVxuICAgICAgICA8L2gzPlxuICAgICAgPC9kaXY+XG4gICAgICA8ZGl2IGNsYXNzPVwiY29sdW1uXCI+XG4gICAgICAgIHsjaWYgZGF0YS5kaXN0cmljdCAhPT0gdW5kZWZpbmVkfVxuICAgICAgICAgIDxkaXYgY2xhc3M9XCJhcmVhXCI+e2RhdGEuZGlzdHJpY3R9PC9kaXY+XG4gICAgICAgIHsvaWZ9XG4gICAgICAgIDxkaXYgY2xhc3M9XCJjaXR5XCI+e2RhdGEubmFtZX08L2Rpdj5cbiAgICAgIDwvZGl2PlxuICAgIDwvZGl2PlxuICAgIDxkaXYgY2xhc3M9XCJyb3dcIj5cbiAgICAgIDxkaXYgY2xhc3M9XCJjb2x1bW5cIj5cbiAgICAgICAgPGRpdiBjbGFzcz1cImNhc2VzXCI+XG4gICAgICAgICAgTmV1ZSBGw6RsbGU6XG4gICAgICAgICAge2RhdGEubmV3Q2FzZXMgPiAwID8gZGF0YS5uZXdDYXNlcy50b0xvY2FsZVN0cmluZygnZGUtREUnKSA6IDB9XG4gICAgICAgIDwvZGl2PlxuICAgICAgICB7I2lmIGRhdGEuZmFlbGxlX2NvdmlkX2FrdHVlbGwgIT09IG51bGwgJiYgZGF0YS5mYWVsbGVfY292aWRfYWt0dWVsbCAhPT0gdW5kZWZpbmVkfVxuICAgICAgICAgIDxkaXYgY2xhc3M9XCJjYXNlc1wiPlxuICAgICAgICAgICAgQmV0dGVuIGZyZWk6XG4gICAgICAgICAgICB7ZGF0YS5iZXR0ZW5fZnJlaSA+IDAgPyBgKCR7TnVtYmVyKGRhdGEuQW50ZWlsX2JldHRlbl9mcmVpKS50b0ZpeGVkKDApfSUpICR7ZGF0YS5iZXR0ZW5fZnJlaX1gIDogMH1cbiAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgey9pZn1cbiAgICAgIDwvZGl2PlxuICAgICAgPGRpdiBjbGFzcz1cImNvbHVtblwiPlxuICAgICAgICB7I2lmIGRhdGEuZmFlbGxlX2NvdmlkX2FrdHVlbGwgIT09IG51bGwgJiYgZGF0YS5mYWVsbGVfY292aWRfYWt0dWVsbCAhPT0gdW5kZWZpbmVkfVxuICAgICAgICAgIDxkaXYgY2xhc3M9XCJjYXNlc1wiPlxuICAgICAgICAgICAgSW50ZW5zaXYtQmV0dGVuIGJlbGVndCBtaXQgQ292aWQtMTk6XG4gICAgICAgICAgICA8c3BhbiBjbGFzcz1cInBlcmNlbnRcIj4oe051bWJlcihkYXRhLkFudGVpbF9DT1ZJRF9iZXR0ZW4pLnRvRml4ZWQoMCl9JSk8L3NwYW4+XG4gICAgICAgICAgICB7ZGF0YS5mYWVsbGVfY292aWRfYWt0dWVsbH1cbiAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgezplbHNlIGlmIGRhdGEuZmFlbGxlX2NvdmlkX2FrdHVlbGwgIT09IHVuZGVmaW5lZH1cbiAgICAgICAgICA8ZGl2IGNsYXNzPVwiY2FzZXNcIj5LZWluZSBJbnRlbnNpdi1CZXR0ZW4gdm9yaGFuZGVuPC9kaXY+XG4gICAgICAgIHsvaWZ9XG4gICAgICA8L2Rpdj5cbiAgICA8L2Rpdj5cbiAgICB7I2lmIGRhdGEuc2x1ZyAhPT0gdW5kZWZpbmVkfVxuICAgICAgPHN2ZyBjbGFzcz1cImFycm93LXJpZ2h0LW1pbmlcIiB2aWV3Qm94PVwiLTEwMC45IDk5LjEgNjEuOSAxMDUuOVwiPjxwYXRoXG4gICAgICAgICAgZD1cIk0tNDEuNyAxNDUuM2wtNDMuNS00My41Yy0xLjctMS43LTQtMi43LTYuNS0yLjdzLTQuOCAxLTYuNSAyLjdjLTEuNyAxLjctMi43IDQtMi43IDYuNXMxIDQuOCAyLjcgNi41TC02MSAxNTJsLTM3LjIgMzcuMmMtMS43IDEuNy0yLjcgNC0yLjcgNi41czEgNC44IDIuNiA2LjVjMS44IDEuOSA0LjIgMi44IDYuNiAyLjggMi4zIDAgNC42LS45IDYuNS0yLjYgMTEuNS0xMS40IDQxLjItNDEgNDMuMy00M2wuMi0uMmMzLjYtMy42IDMuNi0xMC40IDAtMTMuOXpcIlxuICAgICAgICA+PC9wYXRoPjwvc3ZnPlxuICAgIHsvaWZ9XG4gIDwvZGl2PlxuPC9kaXY+XG4iXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQ0UsS0FBSyxlQUFDLENBQUMsQUFDTCxnQkFBZ0IsQ0FBRSxJQUFJLFNBQVMsQ0FBQyxDQUNoQyxNQUFNLENBQUUsR0FBRyxDQUFDLEtBQUssQ0FBQyxXQUFXLENBQzdCLGFBQWEsQ0FBRSxJQUFJLGVBQWUsQ0FBQyxDQUNuQyxLQUFLLENBQUUsSUFBSSxZQUFZLENBQUMsQ0FDeEIsT0FBTyxDQUFFLEtBQUssQ0FDZCxRQUFRLENBQUUsTUFBTSxDQUNoQixPQUFPLENBQUUsSUFBSSxTQUFTLENBQUMsQ0FFdkIsUUFBUSxDQUFFLFFBQVEsQ0FDbEIsVUFBVSxDQUFFLE1BQU0sQ0FBQyxJQUFJLENBQUMsV0FBVyxDQUNuQyxXQUFXLENBQUUsSUFBSSxDQUNqQixLQUFLLENBQUUsSUFBSSxDQUNYLFdBQVcsQ0FBRSxPQUFPLEFBQ3RCLENBQUMsQUFFRCxvQkFBSyxNQUFNLEFBQUMsQ0FBQyxBQUNYLFlBQVksQ0FBRSxJQUFJLE9BQU8sQ0FBQyxBQUM1QixDQUFDLEFBQ0QsTUFBTSxBQUFDLFFBQVEsS0FBSyxDQUFDLEFBQUMsQ0FBQyxBQUNyQixvQkFBSyxNQUFNLEFBQUMsQ0FBQyxBQUNYLFlBQVksQ0FBRSxJQUFJLE9BQU8sQ0FBQyxBQUM1QixDQUFDLEFBQ0gsQ0FBQyxBQUVELElBQUksZUFBQyxDQUFDLEFBQ0osV0FBVyxDQUFFLE1BQU0sQ0FDbkIsT0FBTyxDQUFFLElBQUksQ0FDYixPQUFPLENBQUUsT0FBTyxBQUNsQixDQUFDLEFBRUQsT0FBTyxlQUFDLENBQUMsQUFDUCxLQUFLLENBQUUsR0FBRyxBQUNaLENBQUMsQUFFRCxZQUFZLGVBQUMsQ0FBQyxBQUNaLE1BQU0sQ0FBRSxLQUFLLENBQ2IsY0FBYyxDQUFFLE1BQU0sQ0FDdEIsS0FBSyxDQUFFLEtBQUssQUFDZCxDQUFDLEFBRUQsT0FBTyxlQUFDLENBQUMsQUFDUCxTQUFTLENBQUUsSUFBSSxDQUNmLFdBQVcsQ0FBRSxHQUFHLENBQ2hCLE1BQU0sQ0FBRSxDQUFDLENBQ1QsT0FBTyxDQUFFLENBQUMsQUFDWixDQUFDLEFBRUQsS0FBSyxlQUFDLENBQUMsQUFDTCxTQUFTLENBQUUsT0FBTyxBQUNwQixDQUFDLEFBRUQsS0FBSyxlQUFDLENBQUMsQUFDTCxTQUFTLENBQUUsTUFBTSxDQUNqQixTQUFTLENBQUUsSUFBSSxDQUNmLFFBQVEsQ0FBRSxNQUFNLENBQ2hCLGFBQWEsQ0FBRSxRQUFRLENBQ3ZCLFdBQVcsQ0FBRSxHQUFHLEFBQ2xCLENBQUMsQUFFRCxNQUFNLGVBQUMsQ0FBQyxBQUNOLFNBQVMsQ0FBRSxPQUFPLEFBQ3BCLENBQUMsQUFFRCxpQkFBaUIsZUFBQyxDQUFDLEFBQ2pCLElBQUksQ0FBRSxJQUFJLFlBQVksQ0FBQyxDQUN2QixNQUFNLENBQUUsR0FBRyxDQUNYLFFBQVEsQ0FBRSxRQUFRLENBRWxCLEtBQUssQ0FBRSxLQUFLLElBQUksQ0FBQyxDQUFDLENBQUMsSUFBSSxTQUFTLENBQUMsQ0FBQyxDQUNsQyxHQUFHLENBQUUsR0FBRyxDQUNSLFNBQVMsQ0FBRSxZQUFZLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUNsQyxLQUFLLENBQUUsR0FBRyxBQUNaLENBQUMsQUFFRCxRQUFRLGVBQUMsQ0FBQyxBQUNSLFFBQVEsQ0FBRSxRQUFRLENBQ2xCLE9BQU8sQ0FBRSxDQUFDLEFBQ1osQ0FBQyxBQUVELE9BQU8sZUFBQyxDQUFDLEFBQ1AsTUFBTSxDQUFFLENBQUMsQ0FDVCxNQUFNLENBQUUsSUFBSSxDQUNaLElBQUksQ0FBRSxDQUFDLENBQ1AsUUFBUSxDQUFFLFFBQVEsQ0FDbEIsS0FBSyxDQUFFLENBQUMsQ0FDUixHQUFHLENBQUUsQ0FBQyxDQUNOLEtBQUssQ0FBRSxJQUFJLENBQ1gsT0FBTyxDQUFFLENBQUMsQ0FDVixTQUFTLENBQUUsTUFBTSxHQUFHLENBQUMsQ0FDckIsZ0JBQWdCLENBQUUsQ0FBQyxDQUFDLENBQUMsQUFDdkIsQ0FBQyJ9 */
.card.svelte-10dxt8h{background-color:var(--card-bg);border:2px solid transparent;border-radius:var(--border-radius);color:var(--card-color);display:block;overflow:hidden;padding:var(--spacing-xs) var(--spacing);position:relative;transition:border 0.1s ease-in-out;user-select:none;width:100%;line-height:initial}.row.svelte-10dxt8h{align-items:center;display:flex;padding:0.25rem}.column.svelte-10dxt8h{width:50%}.danger-icon.svelte-10dxt8h{height:0.7em;vertical-align:middle;width:0.7em}.number.svelte-10dxt8h{font-size:1.5rem;font-weight:500;margin:0;padding:0}.area.svelte-10dxt8h{font-size:0.75rem}.city.svelte-10dxt8h{font-size:1rem;max-width:100%;overflow:hidden;text-overflow:ellipsis;font-weight:600}.cases.svelte-10dxt8h{font-size:0.75rem}.arrow-right-mini.svelte-10dxt8h{fill:var(--card-color);height:1em;position:absolute;right:calc(-0.5 * var(--spacing));top:50%;transform:translate3d(0, -50%, 0);width:1em}.content.svelte-10dxt8h{position:relative;z-index:5}.canvas.svelte-10dxt8h{bottom:0;height:200%;left:0;position:absolute;right:0;top:0;width:200%;z-index:0;transform:scale(0.5);transform-origin:0 0}
/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */
.wrapper.svelte-z7v55n{--_circle:var(--info-bg)}.card.svelte-z7v55n{background-color:var(--bg-200);color:white;border-radius:var(--border-radius);padding:0.25rem;overflow:hidden;--_circle:var(--info-bg);max-width:var(--max-width-container);margin:auto}.stage-wrapper.svelte-z7v55n{display:flex;place-content:center;justify-content:space-around}.card.stage-1.svelte-z7v55n{--_circle:var(--warning-bg)}.card.stage-2.svelte-z7v55n{--_circle:var(--danger-bg)}.circle.svelte-z7v55n{position:relative;margin:0.5rem;margin-right:0.5rem;border-radius:50%;display:inline-block;width:2rem;height:2rem;flex:0 0 auto;background-color:var(--_circle);box-shadow:0 0 0 5px var(--_circle) inset}.circle.svelte-z7v55n::after{position:absolute;top:50%;left:50%;transform:translate3d(-50%, -60%, 0) rotate(45deg);content:'';width:0.6rem;height:1rem;border:3px solid var(--info-contrast);border-top-width:0;border-left-width:0}.text-column.svelte-z7v55n{flex:1 1 0;display:flex;align-items:center}.label.svelte-z7v55n{display:block;font-size:0.75rem;line-height:1rem;flex:1 1 auto;padding:0.25rem}.number.svelte-z7v55n{padding:0.25rem 0.5rem;font-weight:600;flex:0 0 auto;min-width:100px;text-align:right}
/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiSG9zcGl0YWxpemF0aW9uLnN2ZWx0ZSIsInNvdXJjZXMiOlsiSG9zcGl0YWxpemF0aW9uLnN2ZWx0ZSJdLCJzb3VyY2VzQ29udGVudCI6WyI8c3R5bGU+XG4gIC53cmFwcGVyIHtcbiAgICAtLV9jaXJjbGU6IHZhcigtLWluZm8tYmcpO1xuICB9XG5cbiAgLmNhcmQge1xuICAgIGJhY2tncm91bmQtY29sb3I6IHZhcigtLWJnLTIwMCk7XG4gICAgY29sb3I6IHdoaXRlO1xuICAgIGJvcmRlci1yYWRpdXM6IHZhcigtLWJvcmRlci1yYWRpdXMpO1xuICAgIHBhZGRpbmc6IDAuMjVyZW07XG4gICAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgICAtLV9jaXJjbGU6IHZhcigtLWluZm8tYmcpO1xuICAgIG1heC13aWR0aDogdmFyKC0tbWF4LXdpZHRoLWNvbnRhaW5lcik7XG4gICAgbWFyZ2luOiBhdXRvO1xuICB9XG5cbiAgLnN0YWdlLXdyYXBwZXIge1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgcGxhY2UtY29udGVudDogY2VudGVyO1xuICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYXJvdW5kO1xuICB9XG5cbiAgLmNhcmQuc3RhZ2UtMSB7XG4gICAgLS1fY2lyY2xlOiB2YXIoLS13YXJuaW5nLWJnKTtcbiAgfVxuICAuY2FyZC5zdGFnZS0yIHtcbiAgICAtLV9jaXJjbGU6IHZhcigtLWRhbmdlci1iZyk7XG4gIH1cbiAgLmNpcmNsZSB7XG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgIG1hcmdpbjogMC41cmVtO1xuICAgIG1hcmdpbi1yaWdodDogMC41cmVtO1xuICAgIGJvcmRlci1yYWRpdXM6IDUwJTtcbiAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gICAgd2lkdGg6IDJyZW07XG4gICAgaGVpZ2h0OiAycmVtO1xuICAgIGZsZXg6IDAgMCBhdXRvO1xuICAgIGJhY2tncm91bmQtY29sb3I6IHZhcigtLV9jaXJjbGUpO1xuICAgIGJveC1zaGFkb3c6IDAgMCAwIDVweCB2YXIoLS1fY2lyY2xlKSBpbnNldDtcbiAgfVxuXG4gIC5jaXJjbGU6OmFmdGVyIHtcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgdG9wOiA1MCU7XG4gICAgbGVmdDogNTAlO1xuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlM2QoLTUwJSwgLTYwJSwgMCkgcm90YXRlKDQ1ZGVnKTtcbiAgICBjb250ZW50OiAnJztcbiAgICB3aWR0aDogMC42cmVtO1xuICAgIGhlaWdodDogMXJlbTtcbiAgICBib3JkZXI6IDNweCBzb2xpZCB2YXIoLS1pbmZvLWNvbnRyYXN0KTtcbiAgICBib3JkZXItdG9wLXdpZHRoOiAwO1xuICAgIGJvcmRlci1sZWZ0LXdpZHRoOiAwO1xuICB9XG5cbiAgLnRleHQtY29sdW1uIHtcbiAgICBmbGV4OiAxIDEgMDtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIH1cblxuICAubGFiZWwge1xuICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgIGZvbnQtc2l6ZTogMC43NXJlbTtcbiAgICBsaW5lLWhlaWdodDogMXJlbTtcbiAgICBmbGV4OiAxIDEgYXV0bztcbiAgICBwYWRkaW5nOiAwLjI1cmVtO1xuICB9XG5cbiAgLm51bWJlciB7XG4gICAgcGFkZGluZzogMC4yNXJlbSAwLjVyZW07XG4gICAgZm9udC13ZWlnaHQ6IDYwMDtcbiAgICBmbGV4OiAwIDAgYXV0bztcbiAgICBtaW4td2lkdGg6IDEwMHB4O1xuICAgIHRleHQtYWxpZ246IHJpZ2h0O1xuICB9XG48L3N0eWxlPlxuXG48c2NyaXB0PlxuICBleHBvcnQgbGV0IGRhdGE7XG4gIGNvbnN0IHJlZCA9IDYwMDtcbiAgY29uc3QgeWVsbG93SCA9IDEyMDA7XG4gIGNvbnN0IHllbGxvd1AgPSA0NTA7XG4gIGV4cG9ydCBsZXQgZ2V0U3RhZ2UgPSAoKSA9PiB7XG4gICAgaWYgKGRhdGEuY3VycmVudEludGVuc2l2ZUNhcmVQYXRpZW50cyA+PSByZWQpIHtcbiAgICAgIHJldHVybiAyO1xuICAgIH1cbiAgICBpZiAoXG4gICAgICAoZGF0YS5ob3NwaXRhbGl6YXRpb25MYXN0N0RheXMgPj0geWVsbG93SCAmJiBkYXRhLmN1cnJlbnRJbnRlbnNpdmVDYXJlUGF0aWVudHMgPCByZWQpIHx8XG4gICAgICAoZGF0YS5jdXJyZW50SW50ZW5zaXZlQ2FyZVBhdGllbnRzID49IHllbGxvd1AgJiYgZGF0YS5jdXJyZW50SW50ZW5zaXZlQ2FyZVBhdGllbnRzIDwgcmVkKVxuICAgICkge1xuICAgICAgcmV0dXJuIDE7XG4gICAgfVxuICAgIHJldHVybiAwO1xuICB9O1xuPC9zY3JpcHQ+XG5cbjxkaXYgY2xhc3M9XCJ3cmFwcGVyXCI+XG4gIDxkaXYgY2xhc3M9XCJjYXJkXCI+XG4gICAgPGRpdiBjbGFzcz1cIntgc3RhZ2Utd3JhcHBlciBzdGFnZS0ke2dldFN0YWdlKCl9YH1cIj5cbiAgICAgIDxkaXYgY2xhc3M9XCJjaXJjbGVcIj48L2Rpdj5cbiAgICAgIDxkaXYgY2xhc3M9XCJ0ZXh0XCI+XG4gICAgICAgIDxkaXYgY2xhc3M9XCJ0ZXh0LWNvbHVtblwiPlxuICAgICAgICAgIDxzcGFuIGNsYXNzPVwibGFiZWxcIj4gTmV1ZSBLcmFua2VuaGF1cy1Db3JvbmEtRWlud2Vpc3VuZ2VuIGluIGRlbiBsZXR6dGVuIDcgVGFnZW4gPC9zcGFuPlxuICAgICAgICAgIDxzcGFuIGNsYXNzPVwibnVtYmVyXCI+e2RhdGEuaG9zcGl0YWxpemF0aW9uTGFzdDdEYXlzfSA8L3NwYW4+XG4gICAgICAgIDwvZGl2PlxuICAgICAgICA8ZGl2IGNsYXNzPVwidGV4dC1jb2x1bW5cIj5cbiAgICAgICAgICA8c3BhbiBjbGFzcz1cImxhYmVsXCI+IENPVklELTE5IFBhdGllbnRlbiBhdWYgSW50ZW5zaXZzdGF0aW9uZW4gPC9zcGFuPlxuICAgICAgICAgIDxzcGFuIGNsYXNzPVwibnVtYmVyXCI+e2RhdGEuY3VycmVudEludGVuc2l2ZUNhcmVQYXRpZW50c30gPC9zcGFuPlxuICAgICAgICA8L2Rpdj5cbiAgICAgIDwvZGl2PlxuICAgIDwvZGl2PlxuICA8L2Rpdj5cbjwvZGl2PlxuIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUNFLFFBQVEsY0FBQyxDQUFDLEFBQ1IsU0FBUyxDQUFFLGNBQWMsQUFDM0IsQ0FBQyxBQUVELEtBQUssY0FBQyxDQUFDLEFBQ0wsZ0JBQWdCLENBQUUsSUFBSSxRQUFRLENBQUMsQ0FDL0IsS0FBSyxDQUFFLEtBQUssQ0FDWixhQUFhLENBQUUsSUFBSSxlQUFlLENBQUMsQ0FDbkMsT0FBTyxDQUFFLE9BQU8sQ0FDaEIsUUFBUSxDQUFFLE1BQU0sQ0FDaEIsU0FBUyxDQUFFLGNBQWMsQ0FDekIsU0FBUyxDQUFFLElBQUkscUJBQXFCLENBQUMsQ0FDckMsTUFBTSxDQUFFLElBQUksQUFDZCxDQUFDLEFBRUQsY0FBYyxjQUFDLENBQUMsQUFDZCxPQUFPLENBQUUsSUFBSSxDQUNiLGFBQWEsQ0FBRSxNQUFNLENBQ3JCLGVBQWUsQ0FBRSxZQUFZLEFBQy9CLENBQUMsQUFFRCxLQUFLLFFBQVEsY0FBQyxDQUFDLEFBQ2IsU0FBUyxDQUFFLGlCQUFpQixBQUM5QixDQUFDLEFBQ0QsS0FBSyxRQUFRLGNBQUMsQ0FBQyxBQUNiLFNBQVMsQ0FBRSxnQkFBZ0IsQUFDN0IsQ0FBQyxBQUNELE9BQU8sY0FBQyxDQUFDLEFBQ1AsUUFBUSxDQUFFLFFBQVEsQ0FDbEIsTUFBTSxDQUFFLE1BQU0sQ0FDZCxZQUFZLENBQUUsTUFBTSxDQUNwQixhQUFhLENBQUUsR0FBRyxDQUNsQixPQUFPLENBQUUsWUFBWSxDQUNyQixLQUFLLENBQUUsSUFBSSxDQUNYLE1BQU0sQ0FBRSxJQUFJLENBQ1osSUFBSSxDQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUNkLGdCQUFnQixDQUFFLElBQUksU0FBUyxDQUFDLENBQ2hDLFVBQVUsQ0FBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxHQUFHLENBQUMsSUFBSSxTQUFTLENBQUMsQ0FBQyxLQUFLLEFBQzVDLENBQUMsQUFFRCxxQkFBTyxPQUFPLEFBQUMsQ0FBQyxBQUNkLFFBQVEsQ0FBRSxRQUFRLENBQ2xCLEdBQUcsQ0FBRSxHQUFHLENBQ1IsSUFBSSxDQUFFLEdBQUcsQ0FDVCxTQUFTLENBQUUsWUFBWSxJQUFJLENBQUMsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxPQUFPLEtBQUssQ0FBQyxDQUNuRCxPQUFPLENBQUUsRUFBRSxDQUNYLEtBQUssQ0FBRSxNQUFNLENBQ2IsTUFBTSxDQUFFLElBQUksQ0FDWixNQUFNLENBQUUsR0FBRyxDQUFDLEtBQUssQ0FBQyxJQUFJLGVBQWUsQ0FBQyxDQUN0QyxnQkFBZ0IsQ0FBRSxDQUFDLENBQ25CLGlCQUFpQixDQUFFLENBQUMsQUFDdEIsQ0FBQyxBQUVELFlBQVksY0FBQyxDQUFDLEFBQ1osSUFBSSxDQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUNYLE9BQU8sQ0FBRSxJQUFJLENBQ2IsV0FBVyxDQUFFLE1BQU0sQUFDckIsQ0FBQyxBQUVELE1BQU0sY0FBQyxDQUFDLEFBQ04sT0FBTyxDQUFFLEtBQUssQ0FDZCxTQUFTLENBQUUsT0FBTyxDQUNsQixXQUFXLENBQUUsSUFBSSxDQUNqQixJQUFJLENBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQ2QsT0FBTyxDQUFFLE9BQU8sQUFDbEIsQ0FBQyxBQUVELE9BQU8sY0FBQyxDQUFDLEFBQ1AsT0FBTyxDQUFFLE9BQU8sQ0FBQyxNQUFNLENBQ3ZCLFdBQVcsQ0FBRSxHQUFHLENBQ2hCLElBQUksQ0FBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FDZCxTQUFTLENBQUUsS0FBSyxDQUNoQixVQUFVLENBQUUsS0FBSyxBQUNuQixDQUFDIn0= */
a.svelte-33g6ew.svelte-33g6ew{text-decoration:none}h2.svelte-33g6ew.svelte-33g6ew{padding:var(--spacing-sm) var(--spacing-xl);text-align:center}ul.svelte-33g6ew.svelte-33g6ew,li.svelte-33g6ew.svelte-33g6ew{list-style:none;padding:0;margin:0}ul.svelte-33g6ew.svelte-33g6ew{display:grid;grid-gap:var(--spacing);grid-template-columns:1fr}@media(min-width: 768px){ul.svelte-33g6ew.svelte-33g6ew,ul.cols2.svelte-33g6ew.svelte-33g6ew{grid-template-columns:1fr 1fr}ul.cols2.svelte-33g6ew.svelte-33g6ew{max-width:var(--max-width-container);margin:0 auto}}@media(min-width: 1024px){ul.svelte-33g6ew.svelte-33g6ew{grid-template-columns:1fr 1fr 1fr}}li.svelte-33g6ew.svelte-33g6ew,a.svelte-33g6ew.svelte-33g6ew{display:grid}.social.svelte-33g6ew.svelte-33g6ew{align-items:center;display:flex;justify-content:center}.hints.svelte-33g6ew.svelte-33g6ew{align-items:center;display:flex;justify-content:center}.list-tile.svelte-33g6ew.svelte-33g6ew{display:flex}.logo.svelte-33g6ew.svelte-33g6ew{flex-shrink:0;width:24px}.logo.svelte-33g6ew img.svelte-33g6ew{border-radius:var(--border-radius);display:block;overflow:hidden}.details.svelte-33g6ew.svelte-33g6ew{align-self:center;margin:0;padding-left:0.75rem;text-align:left;line-height:1rem}
/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguc3ZlbHRlIiwic291cmNlcyI6WyJpbmRleC5zdmVsdGUiXSwic291cmNlc0NvbnRlbnQiOlsiPHN0eWxlPlxuICBhIHtcbiAgICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XG4gIH1cblxuICBoMiB7XG4gICAgLyogY29sb3I6IHZhcigtLWJnLTEwMCk7ICovXG4gICAgcGFkZGluZzogdmFyKC0tc3BhY2luZy1zbSkgdmFyKC0tc3BhY2luZy14bCk7XG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICB9XG5cbiAgLyogTGFuZGtyZWlzZSAgKi9cblxuICAvKiByZXNldCBsaXN0c3R5bGluZyAqL1xuICAvKiBSZW1vdmUgZGVmYXVsdCBwYWRkaW5nICovXG4gIHVsLFxuICBsaSB7XG4gICAgbGlzdC1zdHlsZTogbm9uZTtcbiAgICBwYWRkaW5nOiAwO1xuICAgIG1hcmdpbjogMDtcbiAgfVxuXG4gIHVsIHtcbiAgICBkaXNwbGF5OiBncmlkO1xuICAgIGdyaWQtZ2FwOiB2YXIoLS1zcGFjaW5nKTtcbiAgICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IDFmcjtcbiAgfVxuICBAbWVkaWEgKG1pbi13aWR0aDogNzY4cHgpIHtcbiAgICB1bCxcbiAgICB1bC5jb2xzMiB7XG4gICAgICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IDFmciAxZnI7XG4gICAgfVxuXG4gICAgdWwuY29sczIge1xuICAgICAgbWF4LXdpZHRoOiB2YXIoLS1tYXgtd2lkdGgtY29udGFpbmVyKTtcbiAgICAgIG1hcmdpbjogMCBhdXRvO1xuICAgIH1cbiAgfVxuICBAbWVkaWEgKG1pbi13aWR0aDogMTAyNHB4KSB7XG4gICAgdWwge1xuICAgICAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiAxZnIgMWZyIDFmcjtcbiAgICB9XG4gIH1cblxuICBsaSxcbiAgYSB7XG4gICAgLyogZGFtaXQgZGllIEjDtmhlIDEwMCUgYXVmIGFsbGVuIEJyb3dzZXJuIGhhdCAqL1xuICAgIGRpc3BsYXk6IGdyaWQ7XG4gIH1cblxuICAuc29jaWFsIHtcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gIH1cblxuICAuaGludHMge1xuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgfVxuXG4gIC5saXN0LXRpbGUge1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gIH1cblxuICAubG9nbyB7XG4gICAgZmxleC1zaHJpbms6IDA7XG4gICAgd2lkdGg6IDI0cHg7XG4gIH1cblxuICAubG9nbyBpbWcge1xuICAgIGJvcmRlci1yYWRpdXM6IHZhcigtLWJvcmRlci1yYWRpdXMpO1xuICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgIG92ZXJmbG93OiBoaWRkZW47XG4gIH1cblxuICAuZGV0YWlscyB7XG4gICAgYWxpZ24tc2VsZjogY2VudGVyO1xuICAgIG1hcmdpbjogMDtcbiAgICBwYWRkaW5nLWxlZnQ6IDAuNzVyZW07XG4gICAgdGV4dC1hbGlnbjogbGVmdDtcbiAgICBsaW5lLWhlaWdodDogMXJlbTtcbiAgfVxuPC9zdHlsZT5cblxuPHNjcmlwdCBjb250ZXh0PVwibW9kdWxlXCI+XG4gIGV4cG9ydCBmdW5jdGlvbiBwcmVsb2FkKCkge1xuICAgIC8vIG5lZWRzIHRoaXMgZm9yIHN0YXJ0aW5nIGdlbmVyYXRpb25cbiAgICBjb25zdCBzaXRlbWFwID0gdGhpcy5mZXRjaCgnc2l0ZW1hcC54bWwnKTtcbiAgICBjb25zdCBpbmRleCA9IHRoaXMuZmV0Y2goYGluZGV4Lmpzb25gKVxuICAgICAgLnRoZW4oKHIpID0+IHIuanNvbigpKVxuICAgICAgLnRoZW4oKGRhdGEpID0+IHtcbiAgICAgICAgcmV0dXJuIHsgZGF0YSB9O1xuICAgICAgfSk7XG4gICAgcmV0dXJuIGluZGV4O1xuICB9XG48L3NjcmlwdD5cblxuPHNjcmlwdD5cbiAgaW1wb3J0IHsgYXN5bmNfZGF0YSB9IGZyb20gJy4uL3N0b3Jlcy9zdG9yZXMnO1xuICBpbXBvcnQgU29jaWFsIGZyb20gJy4uL2NvbXBvbmVudHMvU29jaWFsLnN2ZWx0ZSc7XG4gIGltcG9ydCBDYXJkIGZyb20gJy4uL2NvbXBvbmVudHMvQ2FyZC5zdmVsdGUnO1xuICBpbXBvcnQgQ2FyZE5hcnJvdyBmcm9tICcuLi9jb21wb25lbnRzL0NhcmROYXJyb3cuc3ZlbHRlJztcbiAgaW1wb3J0IHsgc29ydENpdHlzIH0gZnJvbSAnLi4vdXRpbHMvc29ydENpdHlzJztcbiAgaW1wb3J0IE1lc3NhZ2UgZnJvbSAnLi4vY29tcG9uZW50cy9NZXNzYWdlLnN2ZWx0ZSc7XG4gIC8vIGltcG9ydCBTbm93IGZyb20gJy4uL2NvbXBvbmVudHMvU25vdy5zdmVsdGUnO1xuICBpbXBvcnQgVGltZXRyYXZlbCBmcm9tICcuLi9jb21wb25lbnRzL1RpbWV0cmF2ZWwuc3ZlbHRlJztcbiAgaW1wb3J0IEhvc3BpdGFsaXphdGlvbiBmcm9tICcuLi9jb21wb25lbnRzL0hvc3BpdGFsaXphdGlvbi5zdmVsdGUnO1xuICAvLyBpbXBvcnQgbW9tZW50IGZyb20gJ21vbWVudCc7XG5cbiAgZXhwb3J0IGxldCBkYXRhO1xuXG4gIGxldCB7IGNpdHlzLCBnZXJtYW5uZXcsIGJhdmFyaWFuZXcsIGdlcm1hbmluY2lkZW5jZSwgYmF2YXJpYWluY2lkZW5jZSwgaG9zcGl0YWxpemF0aW9uIH0gPSBkYXRhO1xuXG4gIGxldCBzb3J0ZWRDaXR5cyA9IFtdO1xuICBzb3J0ZWRDaXR5cyA9IHNvcnRDaXR5cyhjaXR5cyk7XG5cbiAgbGV0IGdlcm1hbnljYXJkID0ge1xuICAgIG5hbWU6ICdEZXV0c2NobGFuZCcsXG4gICAgaW5jaWRlbmNlOiBnZXJtYW5pbmNpZGVuY2UsXG4gICAgbmV3Q2FzZXM6IGdlcm1hbm5ldyxcbiAgfTtcbiAgbGV0IGJhdmFyaWFjYXJkID0ge1xuICAgIG5hbWU6ICdCYXllcm4nLFxuICAgIGluY2lkZW5jZTogYmF2YXJpYWluY2lkZW5jZSxcbiAgICBuZXdDYXNlczogYmF2YXJpYW5ldyxcbiAgfTtcblxuICAkOiB7XG4gICAgaWYgKCEhJGFzeW5jX2RhdGEgJiYgISEkYXN5bmNfZGF0YS5jaXR5cykge1xuICAgICAgLy8gYXNzaWduIHRpbWV0cmF2ZWxkYXRhXG4gICAgICBzb3J0ZWRDaXR5cyA9IHNvcnRDaXR5cygkYXN5bmNfZGF0YS5jaXR5cyk7XG4gICAgICBnZXJtYW5uZXcgPSAkYXN5bmNfZGF0YS5nZXJtYW5uZXc7XG4gICAgICBiYXZhcmlhbmV3ID0gJGFzeW5jX2RhdGEuYmF2YXJpYW5ldztcbiAgICAgIGdlcm1hbnljYXJkLmluY2lkZW5jZSA9ICRhc3luY19kYXRhLmdlcm1hbmluY2lkZW5jZTtcbiAgICAgIGJhdmFyaWFjYXJkLmluY2lkZW5jZSA9ICRhc3luY19kYXRhLmJhdmFyaWFpbmNpZGVuY2U7XG4gICAgICBnZXJtYW55Y2FyZC5uZXdDYXNlcyA9ICRhc3luY19kYXRhLmdlcm1hbm5ldztcbiAgICAgIGJhdmFyaWFjYXJkLm5ld0Nhc2VzID0gJGFzeW5jX2RhdGEuYmF2YXJpYW5ldztcbiAgICAgIGhvc3BpdGFsaXphdGlvbiA9ICRhc3luY19kYXRhLmhvc3BpdGFsaXphdGlvbjtcbiAgICB9XG4gIH1cbjwvc2NyaXB0PlxuXG48c3ZlbHRlOmhlYWQ+XG4gIDx0aXRsZT5Db3JvbmEtQW1wZWwtQ29idXJnOiDwn5qmIEFrdHVlbGxlIEbDpGxsZSB1bmQgWmFobGVuPC90aXRsZT5cbiAgPG1ldGFcbiAgICBjb250ZW50PVwi8J+apiBBa3R1ZWxsZSA3IFRhZ2UtSW56aWRlbnogcHJvIDEwMC4wMDAgRWlud29obmVyIGbDvHIgQ29idXJnLCBCYW1iZXJnLCBLcm9uYWNoLCBTY2h3ZWluZnVydCwgTGljaHRlbmZlbHMsIEhhw59iZXJnZSwgSGlsZGJ1cmdoYXVzZW4gdW5kIFNvbm5lYmVyZyAhICDimqDvuI8gQWxsZSBha3R1ZWxsZW4gWmFobGVuIOKaoO+4jyBBbGxlIGFrdHVlbGxlbiBGw6RsbGVcIlxuICAgIG5hbWU9XCJkZXNjcmlwdGlvblwiXG4gIC8+XG4gIDxtZXRhXG4gICAgcHJvcGVydHk9XCJvZzp0aXRsZVwiXG4gICAgY29udGVudD1cIkNvcm9uYS1BbXBlbCBDb2J1cmcgdW5kIFVtZ2VidW5nOiBha3R1ZWxsZSA3IFRhZ2UgQ29yb25hIEluemlkZW56XCJcbiAgLz5cbiAgPG1ldGFcbiAgICBwcm9wZXJ0eT1cIm9nOmRlc2NyaXB0aW9uXCJcbiAgICBjb250ZW50PVwi8J+apiBBa3R1ZWxsZSA3IFRhZ2UtSW56aWRlbnogcHJvIDEwMC4wMDAgRWlud29obmVyIGbDvHIgQ29idXJnLCBCYW1iZXJnLCBLcm9uYWNoLCBTY2h3ZWluZnVydCwgTGljaHRlbmZlbHMsIEhhw59iZXJnZSwgSGlsZGJ1cmdoYXVzZW4gdW5kIFNvbm5lYmVyZyAhICDimqDvuI8gQWxsZSBha3R1ZWxsZW4gWmFobGVuIOKaoO+4jyBBbGxlIGFrdHVlbGxlbiBGw6RsbGVcIlxuICAvPlxuPC9zdmVsdGU6aGVhZD5cblxuPGRpdiBjbGFzcz1cImhvbWVwYWdlXCI+XG4gIDxjZW50ZXI+XG4gICAgPE1lc3NhZ2UgdW50aWw9XCIyMDIyLTEyLTE1VDIzOjAwOjAwWlwiPlxuICAgICAgPCEtLSArMSBTdHVuZGUgLS0+XG4gICAgICA8YSBjbGFzcz1cImxpc3QtdGlsZVwiIGhyZWY9XCJodHRwczovL2Nvcm9uYS1hbXBlbC5hcHAvP2NvYnVyZ1wiPlxuICAgICAgICA8ZGl2IGNsYXNzPVwibG9nb1wiPlxuICAgICAgICAgIDxpbWdcbiAgICAgICAgICAgIHNyYz1cImh0dHBzOi8vd3d3LmNvcm9uYS1hbXBlbC5hcHAvZmF2aWNvbnMvbWFza2FibGVfaWNvbl94MTI4LnBuZ1wiXG4gICAgICAgICAgICB3aWR0aD1cIjI0XCJcbiAgICAgICAgICAgIGhlaWdodD1cIjI0XCJcbiAgICAgICAgICAgIGFsdD1cIkFtcGVsLUljb25cIlxuICAgICAgICAgICAgc3R5bGU9XCIgaGVpZ2h0OiBhdXRvO1xuICBtYXgtd2lkdGg6IDEwMCU7XCJcbiAgICAgICAgICAvPlxuICAgICAgICA8L2Rpdj5cbiAgICAgICAgPHAgY2xhc3M9XCJkZXRhaWxzXCI+XG4gICAgICAgICAgPHNtYWxsPiA8c3Ryb25nPlp1ciBBcHAgbWl0IEFMTEVOIExhbmRrcmVpc2VuJm5ic3A7JnJzYXF1bzs8L3N0cm9uZz4gPC9zbWFsbD5cbiAgICAgICAgPC9wPlxuICAgICAgPC9hPlxuICAgIDwvTWVzc2FnZT5cbiAgPC9jZW50ZXI+XG5cbiAgPGNlbnRlcj5cbiAgICA8TWVzc2FnZSB1bnRpbD1cIjIwMjEtMDktMDlUMTc6MDA6MDBaXCI+XG4gICAgICA8IS0tICsxIFN0dW5kZSAtLT5cbiAgICAgIDxzbWFsbD5cbiAgICAgICAgPHNwYW4+IPCfkqUgPHN0cm9uZz5BQ0hUVU5HITwvc3Ryb25nPiBEYXMgUktJIGFrdHVhbGlzaWVydCBha3R1ZWxsIG5vY2ggaWhyZSBEYXRlbiAuLi4gPC9zcGFuPlxuICAgICAgPC9zbWFsbD5cbiAgICA8L01lc3NhZ2U+XG4gIDwvY2VudGVyPlxuXG4gIDwhLS0gPFNub3cgLz4gLS0+XG4gIDxkaXYgc3R5bGU9XCJtYXJnaW4tdG9wOjEwcHg7XCI+XG4gICAgPHVsIGNsYXNzPVwiY29sczJcIj5cbiAgICAgIDxsaT5cbiAgICAgICAgPENhcmROYXJyb3cgYmluZDpkYXRhPVwie2dlcm1hbnljYXJkfVwiIC8+XG4gICAgICA8L2xpPlxuICAgICAgPGxpPlxuICAgICAgICA8Q2FyZE5hcnJvdyBiaW5kOmRhdGE9XCJ7YmF2YXJpYWNhcmR9XCIgLz5cbiAgICAgIDwvbGk+XG4gICAgPC91bD5cbiAgPC9kaXY+XG5cbiAgeyNpZiAhIWhvc3BpdGFsaXphdGlvbn1cbiAgICA8aDI+SG9zcGl0YWxpc2llcnVuZyBpbiBCYXllcm48L2gyPlxuICAgIDxIb3NwaXRhbGl6YXRpb24gYmluZDpkYXRhPVwie2hvc3BpdGFsaXphdGlvblswXX1cIiAvPlxuICAgIDwhLS0gPGJyIC8+XG4gICAgPGNlbnRlcj5cbiAgICAgIDxNZXNzYWdlIHVudGlsPVwiMjAyMi0xMi0xNVQyMzowMDowMFpcIj5cbiAgICAgICAgPHAgc3R5bGU9XCJtYXJnaW46MCAuNXJlbTtcIj5cbiAgICAgICAgICA8c21hbGw+IDxzdHJvbmc+RXJ3ZWl0ZXJ0ZSBNYcOfbmFobWVuIHNlaXQgMjguMTIuMjAyMTwvc3Ryb25nPiA8L3NtYWxsPlxuICAgICAgICA8L3A+XG4gICAgICA8L01lc3NhZ2U+XG4gICAgPC9jZW50ZXI+IC0tPlxuICAgIDxoMj43IFRhZ2UgSW56aWRlbno8L2gyPlxuICB7L2lmfVxuXG4gIDxuYXY+XG4gICAgPHVsIGlkPVwiaHAtY2FyZGxpc3RcIj5cbiAgICAgIHsjZWFjaCBzb3J0ZWRDaXR5cyBhcyBjaXR5fVxuICAgICAgICA8bGk+XG4gICAgICAgICAgPGEgcmVsPVwicHJlZmV0Y2hcIiBocmVmPVwie2NpdHkuc2x1Z30vXCIgdGl0bGU9XCJ7YFp1ICR7Y2l0eS5kaXN0cmljdH0gJHtjaXR5Lm5hbWV9IOKAumB9XCI+XG4gICAgICAgICAgICA8Q2FyZCBiaW5kOmRhdGE9XCJ7Y2l0eX1cIiAvPlxuICAgICAgICAgIDwvYT5cbiAgICAgICAgPC9saT5cbiAgICAgIHsvZWFjaH1cbiAgICA8L3VsPlxuICA8L25hdj5cbiAgPGRpdiBjbGFzcz1cInNvY2lhbFwiPlxuICAgIDxTb2NpYWwgLz5cbiAgPC9kaXY+XG4gIDxiciAvPlxuICA8Y2VudGVyPlxuICAgIDxNZXNzYWdlIHVudGlsPVwiMjAyNC0wOS0wOVQxNzowMDowMFpcIiBsZWZ0PlxuICAgICAgPCEtLSArMSBTdHVuZGUgLS0+XG4gICAgICA8c21hbGw+XG4gICAgICAgIDxzcGFuPjxzdHJvbmc+SGlud2Vpczwvc3Ryb25nPjogQWxsZSBBbmdhYmVuIHNpbmQgb2huZSBHZXfDpGhyLiBEaWVzIGlzdCBuaWNodCBkaWUgb2ZmaXppZWxsZVxuICAgICAgICAgIENvcm9uYS1BbXBlbC4gRmFyYmVuIGvDtm5uZW4gZXZlbnR1ZWxsIGFid2VpY2hlbiB1bmQgc2luZCBudXIgenVyIE9yaWVudGllcnVuZyBnZWRhY2h0Ljwvc3Bhbj5cbiAgICAgIDwvc21hbGw+XG4gICAgPC9NZXNzYWdlPlxuICAgIDxNZXNzYWdlIHVudGlsPVwiMjAyNC0wOS0wOVQxNzowMDowMFpcIiBsZWZ0PlxuICAgICAgPCEtLSArMSBTdHVuZGUgLS0+XG4gICAgICA8c21hbGw+XG4gICAgICAgIDxzcGFuPjxzdHJvbmc+SGlud2VpcyB6dXIgSG9zcGl0YWxpc2llcnVuZzwvc3Ryb25nPjogRGllIHdpcmtsaWNoZW4gWmFobGVuIHp1clxuICAgICAgICAgIEhvc3BpdGFsaXNpZXJ1bmcga8O2bm5lbiBuaWNodCB6dSAxMDAlIGtvcnJla3QgYW5nZWdlYmVuIHdlcmRlbiwgZGEgZXMgw7xiZXIgVGFnZSB1bmQgV29jaGVuXG4gICAgICAgICAgaGlud2VnIG5vY2ggTmFjaG1lbGR1bmdlbiBnaWJ0LiBJY2gga2FubiBoaWVyIGxlaWRlciBudXIgZGllIG9mZml6aWVsbGVuIFphaGxlbiBkZXMgTEdMc1xuICAgICAgICAgIGFuZ2ViZW4sIG5hY2ggZGVyIHNpY2ggdW5zZXJlIFJlZ2llcnVuZyBpbiBCYXllcm4gb3JpZW50aWVydC5cbiAgICAgICAgICA8YVxuICAgICAgICAgICAgaHJlZj1cImh0dHBzOi8vd3d3LmxnbC5iYXllcm4uZGUvZ2VzdW5kaGVpdC9pbmZla3Rpb25zc2NodXR6L2luZmVrdGlvbnNrcmFua2hlaXRlbl9hX3ovY29yb25hdmlydXMva2FydGVfY29yb25hdmlydXMvaW5kZXguaHRtI3dLZW5uemFobGVuXCJcbiAgICAgICAgICAgIHRhcmdldD1cIl9ibGFua1wiXG4gICAgICAgICAgICByZWw9XCJub29wZW5lciBub3JlZmVycmVyXCJcbiAgICAgICAgICA+XG4gICAgICAgICAgICA8c21hbGw+UXVlbGxlOiBMR0w8L3NtYWxsPlxuICAgICAgICAgIDwvYT48L3NwYW4+XG4gICAgICA8L3NtYWxsPlxuICAgIDwvTWVzc2FnZT5cbiAgPC9jZW50ZXI+XG5cbiAgPFRpbWV0cmF2ZWwgLz5cbiAgPGRpdiBjbGFzcz1cImhpbnRzXCI+XG4gICAgPE1lc3NhZ2UgdW50aWw9XCIyMDIxLTAxLTMxVDAwOjAwOjAwWlwiPlxuICAgICAgPHNtYWxsPlxuICAgICAgICA8c3ZnXG4gICAgICAgICAgY2xhc3M9XCJkYW5nZXItaWNvblwiXG4gICAgICAgICAgeG1sbnM9XCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1wiXG4gICAgICAgICAgeG1sbnM6eGxpbms9XCJodHRwOi8vd3d3LnczLm9yZy8xOTk5L3hsaW5rXCJcbiAgICAgICAgICBhcmlhLWhpZGRlbj1cInRydWVcIlxuICAgICAgICAgIGZvY3VzYWJsZT1cImZhbHNlXCJcbiAgICAgICAgICByb2xlPVwiaW1nXCJcbiAgICAgICAgICB3aWR0aD1cIjEuNWVtXCJcbiAgICAgICAgICBoZWlnaHQ9XCIxLjVlbVwiXG4gICAgICAgICAgcHJlc2VydmVBc3BlY3RSYXRpbz1cInhNaWRZTWlkIG1lZXRcIlxuICAgICAgICAgIHZpZXdCb3g9XCIwIDAgMjQgMjRcIlxuICAgICAgICAgIHN0eWxlPVwidHJhbnNmb3JtOiB0cmFuc2xhdGUzZCgwLCAtMnB4LCAwKTtcbiAgdmVydGljYWwtYWxpZ246IG1pZGRsZTtcIlxuICAgICAgICA+PHBhdGhcbiAgICAgICAgICAgIGQ9XCJNMTQuOCA0LjYxM2w2LjcwMSAxMS4xNjFjLjk2MyAxLjYwMy40OSAzLjcxMi0xLjA1NyA0LjcxYTMuMjEzIDMuMjEzIDAgMCAxLTEuNzQzLjUxNkg1LjI5OEMzLjQ3NyAyMSAyIDE5LjQ3IDIgMTcuNTgxYzAtLjYzOS4xNzMtMS4yNjQuNDk4LTEuODA3TDkuMiA0LjYxM2MuOTYyLTEuNjAzIDIuOTk2LTIuMDk0IDQuNTQzLTEuMDk2Yy40MjguMjc2Ljc5LjY1MSAxLjA1NyAxLjA5NnptLTIuMjIuODM5YTEuMDc3IDEuMDc3IDAgMCAwLTEuNTE0LjM2NUw0LjM2NSAxNi45OGExLjE3IDEuMTcgMCAwIDAtLjE2Ni42MDJjMCAuNjMuNDkyIDEuMTQgMS4xIDEuMTRIMTguN2MuMjA2IDAgLjQwNy0uMDYuNTgxLS4xNzJhMS4xNjQgMS4xNjQgMCAwIDAgLjM1My0xLjU3TDEyLjkzMyA1LjgxN2ExLjEyIDEuMTIgMCAwIDAtLjM1Mi0uMzY1ek0xMiAxN2ExIDEgMCAxIDEgMC0yYTEgMSAwIDAgMSAwIDJ6bTAtOWExIDEgMCAwIDEgMSAxdjRhMSAxIDAgMCAxLTIgMFY5YTEgMSAwIDAgMSAxLTF6XCJcbiAgICAgICAgICAgIGZpbGw9XCJjdXJyZW50Q29sb3JcIlxuICAgICAgICAgID48L3BhdGg+PC9zdmc+XG4gICAgICAgIDxzcGFuPiBBYiAyMDAgZ2VsdGVuIHdlaXRlcmUgTWHDn25haG1lbiBpbiBCYXllcm4hIDwvc3Bhbj5cbiAgICAgIDwvc21hbGw+XG4gICAgPC9NZXNzYWdlPlxuICA8L2Rpdj5cbjwvZGl2PlxuIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUNFLENBQUMsNEJBQUMsQ0FBQyxBQUNELGVBQWUsQ0FBRSxJQUFJLEFBQ3ZCLENBQUMsQUFFRCxFQUFFLDRCQUFDLENBQUMsQUFFRixPQUFPLENBQUUsSUFBSSxZQUFZLENBQUMsQ0FBQyxJQUFJLFlBQVksQ0FBQyxDQUM1QyxVQUFVLENBQUUsTUFBTSxBQUNwQixDQUFDLEFBTUQsOEJBQUUsQ0FDRixFQUFFLDRCQUFDLENBQUMsQUFDRixVQUFVLENBQUUsSUFBSSxDQUNoQixPQUFPLENBQUUsQ0FBQyxDQUNWLE1BQU0sQ0FBRSxDQUFDLEFBQ1gsQ0FBQyxBQUVELEVBQUUsNEJBQUMsQ0FBQyxBQUNGLE9BQU8sQ0FBRSxJQUFJLENBQ2IsUUFBUSxDQUFFLElBQUksU0FBUyxDQUFDLENBQ3hCLHFCQUFxQixDQUFFLEdBQUcsQUFDNUIsQ0FBQyxBQUNELE1BQU0sQUFBQyxZQUFZLEtBQUssQ0FBQyxBQUFDLENBQUMsQUFDekIsOEJBQUUsQ0FDRixFQUFFLE1BQU0sNEJBQUMsQ0FBQyxBQUNSLHFCQUFxQixDQUFFLEdBQUcsQ0FBQyxHQUFHLEFBQ2hDLENBQUMsQUFFRCxFQUFFLE1BQU0sNEJBQUMsQ0FBQyxBQUNSLFNBQVMsQ0FBRSxJQUFJLHFCQUFxQixDQUFDLENBQ3JDLE1BQU0sQ0FBRSxDQUFDLENBQUMsSUFBSSxBQUNoQixDQUFDLEFBQ0gsQ0FBQyxBQUNELE1BQU0sQUFBQyxZQUFZLE1BQU0sQ0FBQyxBQUFDLENBQUMsQUFDMUIsRUFBRSw0QkFBQyxDQUFDLEFBQ0YscUJBQXFCLENBQUUsR0FBRyxDQUFDLEdBQUcsQ0FBQyxHQUFHLEFBQ3BDLENBQUMsQUFDSCxDQUFDLEFBRUQsOEJBQUUsQ0FDRixDQUFDLDRCQUFDLENBQUMsQUFFRCxPQUFPLENBQUUsSUFBSSxBQUNmLENBQUMsQUFFRCxPQUFPLDRCQUFDLENBQUMsQUFDUCxXQUFXLENBQUUsTUFBTSxDQUNuQixPQUFPLENBQUUsSUFBSSxDQUNiLGVBQWUsQ0FBRSxNQUFNLEFBQ3pCLENBQUMsQUFFRCxNQUFNLDRCQUFDLENBQUMsQUFDTixXQUFXLENBQUUsTUFBTSxDQUNuQixPQUFPLENBQUUsSUFBSSxDQUNiLGVBQWUsQ0FBRSxNQUFNLEFBQ3pCLENBQUMsQUFFRCxVQUFVLDRCQUFDLENBQUMsQUFDVixPQUFPLENBQUUsSUFBSSxBQUNmLENBQUMsQUFFRCxLQUFLLDRCQUFDLENBQUMsQUFDTCxXQUFXLENBQUUsQ0FBQyxDQUNkLEtBQUssQ0FBRSxJQUFJLEFBQ2IsQ0FBQyxBQUVELG1CQUFLLENBQUMsR0FBRyxjQUFDLENBQUMsQUFDVCxhQUFhLENBQUUsSUFBSSxlQUFlLENBQUMsQ0FDbkMsT0FBTyxDQUFFLEtBQUssQ0FDZCxRQUFRLENBQUUsTUFBTSxBQUNsQixDQUFDLEFBRUQsUUFBUSw0QkFBQyxDQUFDLEFBQ1IsVUFBVSxDQUFFLE1BQU0sQ0FDbEIsTUFBTSxDQUFFLENBQUMsQ0FDVCxZQUFZLENBQUUsT0FBTyxDQUNyQixVQUFVLENBQUUsSUFBSSxDQUNoQixXQUFXLENBQUUsSUFBSSxBQUNuQixDQUFDIn0= */
