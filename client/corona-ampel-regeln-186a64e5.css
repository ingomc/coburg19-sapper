.text.svelte-1oxw5sf{padding:0.5em;display:inline-block;border-radius:var(--border-radius)}.text.darkred.svelte-1oxw5sf{background-color:var(--superdanger-bg);color:var(--superdanger-contrast)}.text.red.svelte-1oxw5sf{background-color:var(--danger-bg);color:var(--danger-contrast)}.text.yellow.svelte-1oxw5sf{background-color:var(--warning-bg);color:var(--warning-contrast)}.text.green.svelte-1oxw5sf{background-color:var(--info-bg);color:var(--info-contrast)}i.svelte-1oxw5sf{font-weight:100;opacity:0.8}
/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29yb25hLWFtcGVsLXJlZ2Vsbi5zdmVsdGUiLCJzb3VyY2VzIjpbImNvcm9uYS1hbXBlbC1yZWdlbG4uc3ZlbHRlIl0sInNvdXJjZXNDb250ZW50IjpbIjxzdHlsZT5cbiAgLnRleHQge1xuICAgIHBhZGRpbmc6IDAuNWVtO1xuICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgICBib3JkZXItcmFkaXVzOiB2YXIoLS1ib3JkZXItcmFkaXVzKTtcbiAgfVxuICAudGV4dC5kYXJrcmVkIHtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB2YXIoLS1zdXBlcmRhbmdlci1iZyk7XG4gICAgY29sb3I6IHZhcigtLXN1cGVyZGFuZ2VyLWNvbnRyYXN0KTtcbiAgfVxuXG4gIC50ZXh0LnJlZCB7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogdmFyKC0tZGFuZ2VyLWJnKTtcbiAgICBjb2xvcjogdmFyKC0tZGFuZ2VyLWNvbnRyYXN0KTtcbiAgfVxuXG4gIC50ZXh0LnllbGxvdyB7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogdmFyKC0td2FybmluZy1iZyk7XG4gICAgY29sb3I6IHZhcigtLXdhcm5pbmctY29udHJhc3QpO1xuICB9XG5cbiAgLnRleHQuZ3JlZW4ge1xuICAgIGJhY2tncm91bmQtY29sb3I6IHZhcigtLWluZm8tYmcpO1xuICAgIGNvbG9yOiB2YXIoLS1pbmZvLWNvbnRyYXN0KTtcbiAgfVxuXG4gIHN0cmlrZSA+ICoge1xuICAgIGNvbG9yOiByZ2JhKDI1NSwgMjU1LCAyNTUsIDAuMik7XG4gIH1cbiAgaSB7XG4gICAgZm9udC13ZWlnaHQ6IDEwMDtcbiAgICBvcGFjaXR5OiAwLjg7XG4gIH1cbjwvc3R5bGU+XG5cbjxzY3JpcHQ+XG4gIGltcG9ydCBNZXNzYWdlIGZyb20gJy4uL2NvbXBvbmVudHMvTWVzc2FnZS5zdmVsdGUnO1xuPC9zY3JpcHQ+XG5cbjxzdmVsdGU6aGVhZD5cbiAgPHRpdGxlPvCfmqYgQ29yb25hLUFtcGVsIFJlZ2Vsbjog4pqg77iPIEFrdHVlbGxlIFJlZ2VsdW5nIGluIEJheWVybjwvdGl0bGU+XG4gIDxtZXRhIGNvbnRlbnQ9XCJBbGxlIENvcm9uYS1BbXBlbCBSZWdlbG46IOKaoO+4jyBBa3R1ZWxsZSBSZWdlbHVuZyBpbiBCYXllcm5cIiBuYW1lPVwiZGVzY3JpcHRpb25cIiAvPlxuICA8bWV0YSBwcm9wZXJ0eT1cIm9nOnRpdGxlXCIgY29udGVudD1cIvCfmqYgQ29yb25hLUFtcGVsIFJlZ2Vsbjog4pqg77iPIEFrdHVlbGxlIFJlZ2VsdW5nIGluIEJheWVyblwiIC8+XG4gIDxtZXRhXG4gICAgcHJvcGVydHk9XCJvZzpkZXNjcmlwdGlvblwiXG4gICAgY29udGVudD1cIkFsbGUgQ29yb25hLUFtcGVsIFJlZ2VsbiB1bmQgIOKaoO+4jyBhbGxlIGFrdHVlbGxlbiBaYWhsZW4gZsO8ciBDb2J1cmcgdW5kIFVtZ2VidW5nIVwiXG4gIC8+XG48L3N2ZWx0ZTpoZWFkPlxuXG48ZGl2PlxuICA8IS0tIDxNZXNzYWdlIHVudGlsPVwiMjAyMS0wMy0wN1QwMDowMDowMFpcIj5cbiAgICA8c21hbGw+XG4gICAgICA8c3ZnXG4gICAgICAgIGNsYXNzPVwiZGFuZ2VyLWljb25cIlxuICAgICAgICB4bWxucz1cImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnXCJcbiAgICAgICAgeG1sbnM6eGxpbms9XCJodHRwOi8vd3d3LnczLm9yZy8xOTk5L3hsaW5rXCJcbiAgICAgICAgYXJpYS1oaWRkZW49XCJ0cnVlXCJcbiAgICAgICAgZm9jdXNhYmxlPVwiZmFsc2VcIlxuICAgICAgICByb2xlPVwiaW1nXCJcbiAgICAgICAgd2lkdGg9XCIxLjVlbVwiXG4gICAgICAgIGhlaWdodD1cIjEuNWVtXCJcbiAgICAgICAgcHJlc2VydmVBc3BlY3RSYXRpbz1cInhNaWRZTWlkIG1lZXRcIlxuICAgICAgICB2aWV3Qm94PVwiMCAwIDI0IDI0XCJcbiAgICAgICAgc3R5bGU9XCJ0cmFuc2Zvcm06IHRyYW5zbGF0ZTNkKDAsIC0ycHgsIDApO1xuICB2ZXJ0aWNhbC1hbGlnbjogbWlkZGxlO1wiXG4gICAgICA+PHBhdGhcbiAgICAgICAgICBkPVwiTTE0LjggNC42MTNsNi43MDEgMTEuMTYxYy45NjMgMS42MDMuNDkgMy43MTItMS4wNTcgNC43MWEzLjIxMyAzLjIxMyAwIDAgMS0xLjc0My41MTZINS4yOThDMy40NzcgMjEgMiAxOS40NyAyIDE3LjU4MWMwLS42MzkuMTczLTEuMjY0LjQ5OC0xLjgwN0w5LjIgNC42MTNjLjk2Mi0xLjYwMyAyLjk5Ni0yLjA5NCA0LjU0My0xLjA5NmMuNDI4LjI3Ni43OS42NTEgMS4wNTcgMS4wOTZ6bS0yLjIyLjgzOWExLjA3NyAxLjA3NyAwIDAgMC0xLjUxNC4zNjVMNC4zNjUgMTYuOThhMS4xNyAxLjE3IDAgMCAwLS4xNjYuNjAyYzAgLjYzLjQ5MiAxLjE0IDEuMSAxLjE0SDE4LjdjLjIwNiAwIC40MDctLjA2LjU4MS0uMTcyYTEuMTY0IDEuMTY0IDAgMCAwIC4zNTMtMS41N0wxMi45MzMgNS44MTdhMS4xMiAxLjEyIDAgMCAwLS4zNTItLjM2NXpNMTIgMTdhMSAxIDAgMSAxIDAtMmExIDEgMCAwIDEgMCAyem0wLTlhMSAxIDAgMCAxIDEgMXY0YTEgMSAwIDAgMS0yIDBWOWExIDEgMCAwIDEgMS0xelwiXG4gICAgICAgICAgZmlsbD1cImN1cnJlbnRDb2xvclwiXG4gICAgICAgID48L3BhdGg+PC9zdmc+XG4gICAgICA8c3Bhbj4gQWt0dWVsbCBnZWx0ZW4genVzw6R0emxpY2hlIFZlcnNjaMOkcmZ1bmdlbiEgPC9zcGFuPlxuICAgIDwvc21hbGw+XG4gIDwvTWVzc2FnZT4gLS0+XG5cbiAgPGgxPkFrdHVlbGxlIFJlZ2VsbiBkZXIgQ29yb25hLUFtcGVsIGbDvHIgQmF5ZXJuPC9oMT5cblxuICA8aDI+SW56aWRlbnotRmFyYmVuPC9oMj5cbiAgPHA+XG4gICAgQWIgZWluZXIgNy1UYWdlLUluemlkZW56IHZvbiDDvGJlciAzNSBpbiBlaW5lbSBMYW5ka3JlaXMgb2RlciBpbiBlaW5lciBrcmVpc2ZyZWllbiBTdGFkdCBnaWx0IGbDvHJcbiAgICBnZXNjaGxvc3NlbmUgUsOkdW1lIGJyZWl0ZmzDpGNoaWcgZGFzIDNHLVByaW56aXA6IFp1Z2FuZyBoYWJlbiBkYW5uIG51ciBHZWltcGZ0ZSwgR2VuZXNlbmUgb2RlclxuICAgIGFrdHVlbGwgR2V0ZXN0ZXRlLlxuICA8L3A+XG4gIDxwPlxuICAgIERhcyB6dXN0w6RuZGlnZSBMYW5kcmF0c2FtdCBvZGVyIGRpZSBrcmVpc2ZyZWllIFN0YWR0IGdlYmVuIGJla2FubnQsIHNvYmFsZCBpbiBpaHJlbSBHZWJpZXQgYW5cbiAgICBkcmVpIGF1ZmVpbmFuZGVyZm9sZ2VuZGVuIFRhZ2VuIGRpZSA3LVRhZ2UtSW56aWRlbnogZGVuIFdlcnQgdm9uIDM1IMO8YmVyc2NocmVpdGV0IG9kZXJcbiAgICB1bnRlcnNjaHJlaXRldC5cbiAgPC9wPlxuICA8dWw+XG4gICAgPGxpPjxzcGFuIGNsYXNzPVwiZ3JlZW4gdGV4dFwiPiBHcsO8bjogJmx0OyAzNTwvc3Bhbj48L2xpPlxuICAgIDxsaT48c3BhbiBjbGFzcz1cInllbGxvdyB0ZXh0XCI+IEdlbGI6IDM1ICZsdDsgNTA8L3NwYW4+PC9saT5cbiAgICA8bGk+PHNwYW4gY2xhc3M9XCJyZWQgdGV4dFwiPiBSb3Q6IDUwICZsdDsgMTAwPC9zcGFuPjwvbGk+XG4gICAgPGxpPjxzcGFuIGNsYXNzPVwiZGFya3JlZCB0ZXh0XCI+IER1bmtlbHJvdDogJmd0OyAxMDA8L3NwYW4+PC9saT5cbiAgPC91bD5cblxuICA8aDI+QWIgZGVtIDI4LjEyLjIxIGdlbHRlbiBmb2xnZW5kZSBSZWdlbG48L2gyPlxuICA8dWw+XG4gICAgPGxpPlxuICAgICAgPGRpdj48c3Ryb25nPlByaXZhdGUgVHJlZmZlbjo8L3N0cm9uZz48L2Rpdj5cbiAgICAgIDx1bD5cbiAgICAgICAgPGxpPlxuICAgICAgICAgIEJlaSBwcml2YXRlbiBadXNhbW1lbmvDvG5mdGVuIGF1w59lcmhhbGIgZGVyIEdhc3Ryb25vbWllLCBhbiBkZW5lbiBhdXNzY2hsaWXDn2xpY2ggR2VpbXBmdGVcbiAgICAgICAgICB1bmQgR2VuZXNlbmUgdGVpbG5laG1lbiwgc2luZFxuICAgICAgICAgIDxzdHJvbmc+bWF4aW1hbCAxMCBQZXJzb25lbjwvc3Ryb25nPlxuICAgICAgICAgIGVybGF1YnQuXG4gICAgICAgIDwvbGk+XG4gICAgICAgIDxsaT5cbiAgICAgICAgICBLaW5kZXJcbiAgICAgICAgICA8c3Ryb25nPnVudGVyIDE0IEphaHJlbjwvc3Ryb25nPlxuICAgICAgICAgIHNpbmQgYmVpIGRlbiBLb250YWt0YmVzY2hyw6Rua3VuZ2VuIGF1c2dlbm9tbWVuLiBEaWUgQWx0ZXJzZ3JlbnplIHZvbiAxNCBKYWhyZW4gZmluZGV0XG4gICAgICAgICAga8O8bmZ0aWcgYXVjaCBmw7xyIGRpZSAyRyBQbHVzLSB1bmQgMkctRXJmb3JkZXJuaXNzZSBBbndlbmR1bmcuXG4gICAgICAgIDwvbGk+XG4gICAgICA8L3VsPlxuICAgIDwvbGk+XG4gICAgPGxpPlxuICAgICAgRsO8ciBkaWUgU2lsdmVzdGVybmFjaHQgd2lyZCBkaWUgU3BlcnJzdHVuZGUgdm9uIDIyIGJpcyA1IFVociBpbiBkZXIgR2FzdHJvbm9taWUgYXVmZ2Vob2Jlbi5cbiAgICAgIEF1ZiBwdWJsaWt1bXN0csOkY2h0aWdlbiBQbMOkdHplbiBnaWx0IGxhbmRlc3dlaXQgZWluIFZlcmJvdCB2b24gTWVuc2NoZW5hbnNhbW1sdW5nZW4gw7xiZXIgMTBcbiAgICAgIFBlcnNvbmVuIHZvbiAzMS4gRGV6ZW1iZXIgMTUgVWhyLCBiaXMgMS4gSmFudWFyIDkgVWhyXG4gICAgPC9saT5cbiAgICA8bGk+XG4gICAgICA8c3Ryb25nPk1pdCBCb29zdGVyLUltcGZ1bmc8L3N0cm9uZz5cbiAgICAgIFRlc3RiZWZyZWl1bmcgYmVpIDJHLVBMVVNcbiAgICAgIDxpPihEcmVpZmFjaCBHZWltcGZ0ZSBtw7xzc2VuIHNpY2ggaW4gQmVyZWljaGVuLCBpbiBkZW5lbjJHLVBMVVMgZ2lsdCwgbmljaHQgbWVociB0ZXN0ZW47IGdpbHRcbiAgICAgICAgYWIgVGFnIDE1IG5hY2ggZGVyIGRyaXR0ZW4gSW1wZnVuZyk8L2k+XG4gICAgPC9saT5cbiAgICA8bGk+XG4gICAgICBBbGxlXG4gICAgICA8c3Ryb25nPkNsdWJzLCBEaXNrb3RoZWtlbiwgQmFycyB1bmQgU2NoYW5rd2lydHNjaGFmdGVuPC9zdHJvbmc+XG4gICAgICBnZXNjaGxvc3Nlbi4gVGFuenZlcmFuc3RhbHR1bmdlbiBzaW5kIHp1a8O8bmZ0aWcgYXVjaCBhdcOfZXJoYWxiIHZvbiBDbHVicyB1bmQgRGlza290aGVrZW5cbiAgICAgIHVudGVyc2FndDxpPiwgc293ZWl0IGVzIHNpY2ggbmljaHQgdW0gU3BvcnRhdXPDvGJ1bmcgaGFuZGVsdDwvaT5cbiAgICA8L2xpPlxuICAgIDxsaT48c3Ryb25nPkdyb8OfZSBTcG9ydHZlcmFuc3RhbHR1bmdlbjwvc3Ryb25nPjogS2VpbmUgWnVzY2hhdWVyIHp1Z2VsYXNzZW48L2xpPlxuICAgIDxsaT5cbiAgICAgIEluXG4gICAgICA8c3Ryb25nPiBJbnppZGVuei1Ib3RzcG90cyBtaXQgbWVociBhbHMgMTAwMCBOZXVpbmZla3Rpb25lbjwvc3Ryb25nPlxuICAgICAgaW4gZGVuIGxldHp0ZW4gNyBUYWdlbiBnZWx0ZW4gbm9jaCBow6RydGVyZSBNYcOfbmFobWVuOlxuICAgICAgPHN0cm9uZz5cbiAgICAgICAgSGllciB3ZXJkZW4gR2FzdHJvbm9taWUsIFNwb3J0LSB1bmQgS3VsdHVyc3TDpHR0ZW4gZ2VzY2hsb3NzZW4uIFZlcmFuc3RhbHR1bmdlbiB3ZXJkZW5cbiAgICAgICAgdW50ZXJzYWd0Ljwvc3Ryb25nPlxuICAgIDwvbGk+XG4gICAgPGxpPlxuICAgICAgPHN0cm9uZz5TY2h1bGVuIHVuZCBLaXRhcyBibGVpYmVuIG9mZmVuPC9zdHJvbmc+LCBhYmVyIGhpZXIgZ2lsdCB3ZWl0ZXIgTWFza2VucGZsaWNodC5cbiAgICAgIFBvb2x0ZXN0cyB3ZXJkZW4gYXVzZ3dlaXRldCwgdm9yIGFsbGVtIGluIEtpdGFzIHNvbGwgaGllciBtZWhyIHBhc3NpZXJlbi4gSW5cbiAgICAgIEJpbGR1bmdzZWlucmljaHR1bmdlbiBnaWx0IGR1cmNoZ2VoZW5kIDNHLlxuICAgIDwvbGk+XG4gICAgPGxpPkdhc3RybzogMkcgaW0gSW5uZW4tIHVuZCBBdcOfZW5iZXJlaWNoIG1pdCBTcGVycnN0dW5kZSBhYiAyMiBVaHI8L2xpPlxuICAgIDxsaT5cbiAgICAgIDJHIHVuZCAyZy1QbHVzIHdlcmRlbiB2ZXJzY2jDpHJmdDpcbiAgICAgIDxzdHJvbmc+MkcgZ2lsdCBiZWkga8O2cnBlcm5haGVuIERpZW5zdGxlaXN0dW5nZW4sIGluIEhvY2hzY2h1bGVuLCBWb2xrc2hvY2hzY2h1bGVuLCBNdXNpay0gdW5kXG4gICAgICAgIEZhaHJzY2h1bGVuLiZuYnNwOzwvc3Ryb25nPlxuICAgIDwvbGk+XG4gICAgPGxpPlxuICAgICAgPHN0cm9uZz5IYW5kZWw6IDwvc3Ryb25nPlxuICAgICAgUGVyc29uZW5vYmVyZ3JlbnplbiAoMTAgbTIgcHJvIFBlcnNvbiksIGFiIDA4LjEyLiBnaWx0IDJHIGbDvHIgTGFkZW5nZXNjaMOkZnRlIG1pdCBLdW5kZW52ZXJrZWhyXG4gICAgICAoR2VzY2jDpGZ0ZSBkZXMgdMOkZ2xpY2hlbiBCZWRhcmZzIGF1c2dlbm9tbWVuKVxuICAgIDwvbGk+XG4gICAgPGxpPlxuICAgICAgSW4gQWx0ZW4tIHVuZCBQZmxlZ2VoZWltZW4gc293aWUgaW4gS3JhbmtlbmjDpHVzZXJuIG3DvHNzZW4gQmVzdWNoZXIgZWluZW4gbmVnYXRpdmVuIFNjaG5lbGx0ZXN0XG4gICAgICB2b3J3ZWlzZW5cbiAgICA8L2xpPlxuICA8L3VsPlxuICA8aHIgLz5cbiAgPGgyPvCfj6UgS3JhbmtoYXVzYW1wZWwgUmVnZWxuIPCfmpE8L2gyPlxuICA8cD48c21hbGw+RXJ3ZWl0ZXJ0ZSBNYcOfbmFobWVuLCBzaWVoZSBvYmVuPC9zbWFsbD48L3A+XG4gIDxwPjxzdHJvbmcgY2xhc3M9XCJncmVlbiB0ZXh0XCI+R1LDnE48L3N0cm9uZz48YnIgLz48YnIgLz48L3A+XG4gIDx1bD5cbiAgICA8bGk+XG4gICAgICBCZWkgcmVnaW9uYWxlciA3LVRhZ2UtSW56aWRlbnogw7xiZXIgMzUgZ2lsdCBJbmRvb3IgZGllIDNHLVJlZ2VsIChHZWltcGZ0LCBHZXRlc3RldCwgR2VuZXNlbilcbiAgICAgIHUuYS4gYmVpOlxuICAgICAgPHVsPlxuICAgICAgICA8bGk+VmVyYW5zdGFsdHVuZ2VuLCBGaXRuZXNzc3R1ZGlvcywgR2FzdHJvbm9taWUsIEZyZWl6ZWl0ZWlucmljaHR1bmdlbiwgS3VsdHVyPC9saT5cbiAgICAgICAgPGxpPmvDtnJwZXJuYWhlbiBEaWVuc3RsZWlzdHVuZ2VuPC9saT5cbiAgICAgIDwvdWw+XG4gICAgPC9saT5cbiAgICA8bGk+XG4gICAgICBNYXNrZW5wZmxpY2h0OlxuICAgICAgPHVsPlxuICAgICAgICA8bGk+SW5kb29yIHVuZCDDllBOVjogbWVkaXppbmlzY2hlIG9kZXIgRkZQMi1NYXNrZTwvbGk+XG4gICAgICAgIDxsaT5PdXRkb29yOiBrZWluZSBNYXNrZW5wZmxpY2h0PC9saT5cbiAgICAgIDwvdWw+XG4gICAgPC9saT5cbiAgICA8bGk+XG4gICAgICBHYXN0cm9ub21pZSB1bmQgSG90ZWxsZXJpZTpcbiAgICAgIDx1bD5cbiAgICAgICAgPGxpPklubmVuLSB1bmQgQXXDn2VuZ2FzdHJvbm9taWUgaXN0IGdlw7ZmZm5ldDwvbGk+XG4gICAgICAgIDxsaT5CZWhlcmJlcmd1bmdzYmV0cmllYmUgc2luZCBnZcO2ZmZuZXQ8L2xpPlxuICAgICAgPC91bD5cbiAgICA8L2xpPlxuICAgIDxsaT5cbiAgICAgIEt1bHR1ciB1bmQgRnJlaXplaXRlaW5yaWNodHVuZ2VuLCBTcG9ydDpcbiAgICAgIDx1bD5cbiAgICAgICAgPGxpPjNHIFJlZ2VsIGluIGdlc2NobG9zc2VuZW4gUsOkdW1lbjwvbGk+XG4gICAgICA8L3VsPlxuICAgIDwvbGk+XG4gICAgPGxpPlxuICAgICAgM0ctUExVUy8yRzpcbiAgICAgIDx1bD5cbiAgICAgICAgPGxpPlxuICAgICAgICAgIMOcYmVyYWxsIGRvcnQgd28gM0cgUmVnZWxuIGdlbHRlbiwgZMO8cmZlbiBCZXRyZWliZXIgZnJlaXdpbGxpZyAzRy1QTFVTIG9kZXIgMkcgZmVzdGxlZ2VuXG4gICAgICAgIDwvbGk+XG4gICAgICA8L3VsPlxuICAgIDwvbGk+XG4gIDwvdWw+XG5cbiAgPHA+PHN0cm9uZyBjbGFzcz1cInllbGxvdyB0ZXh0XCI+R0VMQiA8L3N0cm9uZz48L3A+XG4gIDx1bD5cbiAgICA8bGk+M0ctUExVUywgd28gdm9yaGVyIDNHIGdhbHQgPGk+KFBDUi1UZXN0IHN0YXR0IFNjaG5lbGx0ZXN0IG7DtnRpZyk8L2k+PC9saT5cbiAgICA8bGk+MkcsIHdvIHZvcmhlciAzRy1QTFVTIGdhbHQgPGk+KEF1c2dlbm9tbWVuIMOWUE5WLCBIYW5kZWwpPC9pPjwvbGk+XG4gICAgPGxpPjJHIGluIERpc2NvdGhla2VuLCBDbHVicywgQm9yZGVsbGVuIHVuZCDDpGhubGljaGVuIEZyZWl6ZWl0ZWlucmljaHR1bmdlbjwvbGk+XG4gICAgPGxpPkFuaGVidW5nIE1hc2tlbnN0YW5kYXJkIGF1ZiBGRlAyPC9saT5cbiAgPC91bD5cblxuICA8cD48c3Ryb25nIGNsYXNzPVwicmVkIHRleHRcIj5ST1QgPC9zdHJvbmc+PC9wPlxuICA8dWw+XG4gICAgPGxpPlxuICAgICAgM0cgYW0gQXJiZWl0c3BsYXR6IHVuZCBiZWkgemVobiBvZGVyIG1laHIgQmVzY2jDpGZ0aWd0ZW4gcmVnZWxtw6TDn2lnZSBUZXN0cyBiZWkgS29udGFrdCBtaXRcbiAgICAgIGFuZGVyZW4gUGVyc29uZW5cbiAgICAgIDxpPihBdXNnZW5vbW1lbiBIYW5kZWwpPC9pPlxuICAgIDwvbGk+XG4gICAgPGxpPjNHIGltIMOWUE5WPC9saT5cbiAgICA8bGk+XG4gICAgICAzRy1QTFVTIGbDvHIgR2FzdHJvbm9taWVcbiAgICAgIDxpPihIb3RlbHMsIFJlc3RhdXJhbnRzKTwvaT5cbiAgICAgIHVuZCBrw7ZycGVybmFoZSBEaWVuc3RsZWlzdHVuZ2VuXG4gICAgICA8aT4oRnJpc2V1cmUpPC9pPlxuICAgIDwvbGk+XG4gICAgPGxpPjJHIGJlaSBWZXJhbnN0YWx0dW5nZW4sIEt1bHR1ciB1bmQgU3BvcnQ8L2xpPlxuICAgIDxsaT5BbmhlYnVuZyBNYXNrZW5zdGFuZGFyZCBhdWYgRkZQMjwvbGk+XG4gIDwvdWw+XG4gIDxociAvPlxuICA8aDM+SG90c3BvdC1SZWdlbHVuZzwvaDM+XG4gIDxwPlxuICAgIEluIExhbmRrcmVpc2VuLCBpbiBkZW5lbiBkaWUgNy1UYWdlLUluemlkZW56IMO8YmVyIDEuMDAwIGxpZWd0LCBzb2xsIGRhcyDDtmZmZW50bGljaGUgTGViZW5cbiAgICB3ZWl0ZXN0Z2VoZW5kIGhlcnVudGVyZ2VmYWhyZW4gd2VyZGVuLiBFcyBnZWx0ZW4gZGFubiBmb2xnZW5kZSB2ZXJzY2jDpHJmdGUgUmVnZWxuOlxuICA8L3A+XG4gIDx1bD5cbiAgICA8bGk+U2NobGllw591bmcgdm9uIEdhc3Ryb25vbWllIHVuZCBCZWhlcmJlcmd1bmc8L2xpPlxuICAgIDxsaT5rZWluZSBGcmVpemVpdC0sIFNwb3J0LSB1bmQgS3VsdHVydmVyYW5zdGFsdHVuZ2VuPC9saT5cbiAgICA8bGk+a2VpbmUga8O2cnBlcm5haGVuIERpZW5zdGxlaXN0dW5nZW4gPGk+KGF1c2dlbm9tbWVuIEZyaXNldXJsw6RkZW4pPC9pPjwvbGk+XG4gICAgPGxpPk9ubGluZS1MZWhyZSBiZWkgSG9jaHNjaHVsZW48L2xpPlxuICAgIDxsaT5QZXJzb25lbm9iZXJncmVuemVuIGltIEhhbmRlbCB2b24gMjAmbmJzcDttPHN1cD4yPC9zdXA+IHBybyBQZXJzb248L2xpPlxuICA8L3VsPlxuICA8cD5cbiAgICBTaW5rdCBkaWUgSW56aWRlbnogZsO8ciBtaW5kZXN0ZW5zXG4gICAgPHN0cm9uZz5mw7xuZiBUYWdlIHVudGVyIGRpZSAxLjAwMGVyLUdyZW56ZTwvc3Ryb25nPiwgd2VyZGVuIGRpZSBSZWdlbG4gYXVmZ2Vob2Jlbi5cbiAgPC9wPlxuICA8cD5cbiAgICA8c3Ryb25nPkhJTldFSVM6PC9zdHJvbmc+XG4gICAgQWxsZSBBbmdhYmVuIHNpbmQgb2huZSBHZXfDpGhyLiBKZWRlciBzb2xsdGUgZsO8ciBzaWNoIHVuZCBzZWluZW4gTGFuZGtyZWlzIGRpZSBha3R1ZWxsZW4gUmVnZWxuXG4gICAgbm9jaCBlaW5tYWwgbmFjaHByw7xmZW4uIFJlZ2VsbiDDpG5kZXJuIHNpY2ggdmllbCB6dSBvZnQgZGVzaGFsYjogRmFsbHMgaWhyIGRlbmt0IGVzIHN0aW1tdFxuICAgIGlyZ2VuZGV0d2FzIG5pY2h0LCBtZWxkZXQgZXVjaCBlaW5mYWNoIGJlaSBtaXIhXG4gIDwvcD5cbjwvZGl2PlxuIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUNFLEtBQUssZUFBQyxDQUFDLEFBQ0wsT0FBTyxDQUFFLEtBQUssQ0FDZCxPQUFPLENBQUUsWUFBWSxDQUNyQixhQUFhLENBQUUsSUFBSSxlQUFlLENBQUMsQUFDckMsQ0FBQyxBQUNELEtBQUssUUFBUSxlQUFDLENBQUMsQUFDYixnQkFBZ0IsQ0FBRSxJQUFJLGdCQUFnQixDQUFDLENBQ3ZDLEtBQUssQ0FBRSxJQUFJLHNCQUFzQixDQUFDLEFBQ3BDLENBQUMsQUFFRCxLQUFLLElBQUksZUFBQyxDQUFDLEFBQ1QsZ0JBQWdCLENBQUUsSUFBSSxXQUFXLENBQUMsQ0FDbEMsS0FBSyxDQUFFLElBQUksaUJBQWlCLENBQUMsQUFDL0IsQ0FBQyxBQUVELEtBQUssT0FBTyxlQUFDLENBQUMsQUFDWixnQkFBZ0IsQ0FBRSxJQUFJLFlBQVksQ0FBQyxDQUNuQyxLQUFLLENBQUUsSUFBSSxrQkFBa0IsQ0FBQyxBQUNoQyxDQUFDLEFBRUQsS0FBSyxNQUFNLGVBQUMsQ0FBQyxBQUNYLGdCQUFnQixDQUFFLElBQUksU0FBUyxDQUFDLENBQ2hDLEtBQUssQ0FBRSxJQUFJLGVBQWUsQ0FBQyxBQUM3QixDQUFDLEFBS0QsQ0FBQyxlQUFDLENBQUMsQUFDRCxXQUFXLENBQUUsR0FBRyxDQUNoQixPQUFPLENBQUUsR0FBRyxBQUNkLENBQUMifQ== */
