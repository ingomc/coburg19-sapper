h3.svelte-r07crj{margin-bottom:1rem;margin-top:0}.question.svelte-r07crj{background-color:var(--bg-200);border-radius:var(--border-radius);margin-bottom:2rem;padding:1rem}
/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */
