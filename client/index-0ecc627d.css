.card.svelte-13r15sk{background-color:var(--card-bg);border:2px solid transparent;border-radius:var(--border-radius);color:var(--card-color);display:block;overflow:hidden;padding:var(--spacing);position:relative;transition:border 0.1s ease-in-out;user-select:none;width:100%;line-height:initial}.card.svelte-13r15sk:focus{border-color:var(--color)}@media(hover: hover){.card.svelte-13r15sk:hover{border-color:var(--color)}}.row.svelte-13r15sk{align-items:center;display:flex;padding:0.25rem}.column.svelte-13r15sk{width:50%}.danger-icon.svelte-13r15sk{height:0.7em;vertical-align:middle;width:0.7em}.number.svelte-13r15sk{font-size:2rem;font-weight:500;margin:0;padding:0}.area.svelte-13r15sk{font-size:0.75rem}.city.svelte-13r15sk{font-size:1.4rem;max-width:100%;overflow:hidden;text-overflow:ellipsis;font-weight:600}.cases.svelte-13r15sk{font-size:0.75rem}.arrow-right-mini.svelte-13r15sk{fill:var(--card-color);height:1em;position:absolute;right:calc(-0.5 * var(--spacing));top:50%;transform:translate3d(0, -50%, 0);width:1em}.content.svelte-13r15sk{position:relative;z-index:5}.canvas.svelte-13r15sk{bottom:0;height:200%;left:0;position:absolute;right:0;top:0;width:200%;z-index:0;transform:scale(0.5);transform-origin:0 0}
/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */
.card.svelte-10dxt8h{background-color:var(--card-bg);border:2px solid transparent;border-radius:var(--border-radius);color:var(--card-color);display:block;overflow:hidden;padding:var(--spacing-xs) var(--spacing);position:relative;transition:border 0.1s ease-in-out;user-select:none;width:100%;line-height:initial}.row.svelte-10dxt8h{align-items:center;display:flex;padding:0.25rem}.column.svelte-10dxt8h{width:50%}.danger-icon.svelte-10dxt8h{height:0.7em;vertical-align:middle;width:0.7em}.number.svelte-10dxt8h{font-size:1.5rem;font-weight:500;margin:0;padding:0}.area.svelte-10dxt8h{font-size:0.75rem}.city.svelte-10dxt8h{font-size:1rem;max-width:100%;overflow:hidden;text-overflow:ellipsis;font-weight:600}.cases.svelte-10dxt8h{font-size:0.75rem}.arrow-right-mini.svelte-10dxt8h{fill:var(--card-color);height:1em;position:absolute;right:calc(-0.5 * var(--spacing));top:50%;transform:translate3d(0, -50%, 0);width:1em}.content.svelte-10dxt8h{position:relative;z-index:5}.canvas.svelte-10dxt8h{bottom:0;height:200%;left:0;position:absolute;right:0;top:0;width:200%;z-index:0;transform:scale(0.5);transform-origin:0 0}
/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */
.wrapper.svelte-1h9n4cc.svelte-1h9n4cc{--circle:var(--info-bg);--card-bg:var(--bg-200);--card-contrast:white;display:grid;grid-gap:var(--spacing-sm)}.card.svelte-1h9n4cc.svelte-1h9n4cc{background-color:var(--card-bg);color:var(--card-contrast);display:flex;border-radius:var(--border-radius);padding:0.25rem;overflow:hidden;align-items:center;opacity:0.75;--circle-contrast:var(--info-contrast);--circle:var(--info-bg);--card-bg:var(--info-bg);--card-contrast:var(--info-contrast);transition:opacity 0.3s ease-in-out}.card.svelte-1h9n4cc.svelte-1h9n4cc:hover{opacity:0.75}.card.yellow.svelte-1h9n4cc.svelte-1h9n4cc{--circle-contrast:var(--warning-contrast);--circle:var(--warning-bg);--card-bg:var(--warning-bg);--card-contrast:var(--warning-contrast)}.card.red.svelte-1h9n4cc.svelte-1h9n4cc{--circle-contrast:var(--danger-contrast);--circle:var(--danger-bg);--card-bg:var(--danger-bg);--card-contrast:var(--danger-contrast)}.card.active.svelte-1h9n4cc.svelte-1h9n4cc{opacity:1;box-shadow:0 0 0px 2px var(--card-bg) inset, 0 0 0px 3px var(--card-contrast) inset}.circle.svelte-1h9n4cc.svelte-1h9n4cc{margin:0.5rem;margin-right:0.5rem;border-radius:50%;display:inline-block;width:2rem;height:2rem;flex:0 0 auto;background-color:var(--circle-contrast);box-shadow:0 0 0 5px var(--circle-contrast) inset}.active.svelte-1h9n4cc .circle.svelte-1h9n4cc{background-color:var(--circle)}.text.svelte-1h9n4cc.svelte-1h9n4cc{width:100%}.text-column.svelte-1h9n4cc.svelte-1h9n4cc{flex:1 1 0;display:flex;align-items:center}p.svelte-1h9n4cc.svelte-1h9n4cc{margin:0;padding-bottom:0.15rem}.label.svelte-1h9n4cc.svelte-1h9n4cc{display:block;font-size:0.75rem;line-height:1rem;flex:1 1 auto;padding:0.25rem}.number.svelte-1h9n4cc.svelte-1h9n4cc{padding:0.25rem 0.5rem;font-weight:600;flex:0 0 auto;min-width:100px;text-align:right}.light.svelte-1h9n4cc.svelte-1h9n4cc{font-weight:300}@media(min-width: 1024px){.wrapper.svelte-1h9n4cc.svelte-1h9n4cc{grid-template-columns:repeat(3, 1fr);grid-gap:var(--spacing)}}
/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */
.homepage.svelte-zbwvgp.svelte-zbwvgp{cursor:url('../cursor.png'), default}a.svelte-zbwvgp.svelte-zbwvgp{text-decoration:none}h2.svelte-zbwvgp.svelte-zbwvgp{padding:var(--spacing-sm) var(--spacing-xl);text-align:center}ul.svelte-zbwvgp.svelte-zbwvgp,li.svelte-zbwvgp.svelte-zbwvgp{list-style:none;padding:0;margin:0}ul.svelte-zbwvgp.svelte-zbwvgp{display:grid;grid-gap:var(--spacing);grid-template-columns:1fr}@media(min-width: 768px){ul.svelte-zbwvgp.svelte-zbwvgp,ul.cols2.svelte-zbwvgp.svelte-zbwvgp{grid-template-columns:1fr 1fr}ul.cols2.svelte-zbwvgp.svelte-zbwvgp{max-width:620px;margin:0 auto}}@media(min-width: 1024px){ul.svelte-zbwvgp.svelte-zbwvgp{grid-template-columns:1fr 1fr 1fr}}li.svelte-zbwvgp.svelte-zbwvgp,a.svelte-zbwvgp.svelte-zbwvgp{display:grid}.social.svelte-zbwvgp.svelte-zbwvgp{align-items:center;display:flex;justify-content:center}.hints.svelte-zbwvgp.svelte-zbwvgp{align-items:center;display:flex;justify-content:center}.list-tile.svelte-zbwvgp.svelte-zbwvgp{display:flex}.logo.svelte-zbwvgp.svelte-zbwvgp{flex-shrink:0;width:24px}.logo.svelte-zbwvgp img.svelte-zbwvgp{border-radius:var(--border-radius);display:block;overflow:hidden}.details.svelte-zbwvgp.svelte-zbwvgp{align-self:center;margin:0;padding-left:0.75rem;text-align:left;line-height:1rem}
/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */
